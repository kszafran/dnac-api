{
  "info": {
    "name": "DNA-C Platform API v1.4.1",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Get Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"token\", data.Token);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "saveHelperData",
                  "value": true,
                  "type": "boolean"
                },
                {
                  "key": "showPassword",
                  "value": false,
                  "type": "boolean"
                }
              ]
            },
            "method": "POST",
            "url": {
              "raw": "https://{{dnac}}:{{port}}/api/system/v1/auth/token",
              "protocol": "https",
              "host": "{{dnac}}",
              "port": "{{port}}",
              "path": [
                "api",
                "system",
                "v1",
                "auth",
                "token"
              ]
            },
            "description": "Authenticates using HTTP basic auth to get an authorization token."
          }
        }
      ]
    },
    {
      "name": "Application Policy",
      "item": [
        {
          "name": "General",
          "item": [
            {
              "name": "Delete Application Set",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/delete-application-set/application-policy/application-set",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "delete-application-set",
                    "application-policy",
                    "application-set"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-set",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  },
                  {
                    "key": "applicationSetId",
                    "value": "",
                    "description": "(string, required) "
                  }
                ],
                "body": null,
                "description": "Invoke the API to delete a custom application"
              },
              "response": null
            },
            {
              "name": "Delete Application",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/delete-application/application-policy/application",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "delete-application",
                    "application-policy",
                    "application"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  },
                  {
                    "key": "applicationId",
                    "value": "",
                    "description": "(string, required) "
                  }
                ],
                "body": null,
                "description": "Invoke the API to delete a custom application"
              },
              "response": null
            },
            {
              "name": "Edit Application",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/edit-application/application-policy/application",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "edit-application",
                    "application-policy",
                    "application"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to create a custom application"
              },
              "response": null
            },
            {
              "name": "Get Application Policies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/get-application-policies/application-policy/application-policies",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "get-application-policies",
                    "application-policy",
                    "application-policies"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-policies",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  },
                  {
                    "key": "offset",
                    "value": "1",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "limit",
                    "value": "500",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "applicationPolicyNamespace",
                    "value": "",
                    "description": "(string, optional) "
                  }
                ],
                "body": null,
                "description": "Invoke the API to return all (or specific) application-policy(ies)"
              },
              "response": null
            },
            {
              "name": "Get Application Sets Count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/get-application-sets-count/application-policy/application-sets/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "get-application-sets-count",
                    "application-policy",
                    "application-sets",
                    "count"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-sets",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "count",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to return the number of defined application sets"
              },
              "response": null
            },
            {
              "name": "Get Application Sets",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/get-application-sets/application-policy/application-sets",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "get-application-sets",
                    "application-policy",
                    "application-sets"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-sets",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  },
                  {
                    "key": "offset",
                    "value": "1",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "limit",
                    "value": "500",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "applicationSetName",
                    "value": "",
                    "description": "(string, optional) "
                  }
                ],
                "body": null,
                "description": "Invoke the API to return all (or specific) defined application-set(s)"
              },
              "response": null
            },
            {
              "name": "Get Applications Count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/get-applications-count/application-policy/applications/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "get-applications-count",
                    "application-policy",
                    "applications",
                    "count"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "applications",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "count",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to return the number of defined applications"
              },
              "response": null
            },
            {
              "name": "Get Applications",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/get-applications/application-policy/applications",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "get-applications",
                    "application-policy",
                    "applications"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "applications",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  },
                  {
                    "key": "offset",
                    "value": "1",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "limit",
                    "value": "500",
                    "description": "(number, optional) "
                  },
                  {
                    "key": "applicationName",
                    "value": "",
                    "description": "(string, optional) "
                  }
                ],
                "body": null,
                "description": "Invoke the API to return the list of all (or specific) defined application(s)"
              },
              "response": null
            },
            {
              "name": "Post Application Policy Intent",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/post-application-policy-intent/application-policy/application-policy/intent",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "post-application-policy-intent",
                    "application-policy",
                    "application-policy",
                    "intent"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "intent",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to create, modify or delete an application-policy"
              },
              "response": null
            },
            {
              "name": "Post Application Set",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/post-application-set/application-policy/application-set",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "post-application-set",
                    "application-policy",
                    "application-set"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application-set",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to create a custom application set"
              },
              "response": null
            },
            {
              "name": "Post Application",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/post-application/application-policy/application",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "post-application",
                    "application-policy",
                    "application"
                  ],
                  "variable": [
                    {
                      "key": "application-policy",
                      "value": null,
                      "description": "(constant, required) "
                    },
                    {
                      "key": "application",
                      "value": null,
                      "description": "(constant, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Invoke the API to create a custom application"
              },
              "response": null
            }
          ]
        }
      ]
    },
    {
      "name": "Connectivity",
      "item": [
        {
          "name": "SD-Access - Non-Fabric (wired/wireless)",
          "item": [
            {
              "name": "Create SSID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/create-ssid",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "create-ssid"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"interfaceName\": \"string\",\n  \"vlanId\": 0,\n  \"ssidName\": \"string\",\n  \"wlanType\": \"string\",\n  \"authenticationType\": \"string\",\n  \"authenticationServer\": \"string\",\n  \"passpharse\": \"string\",\n  \"trafficType\": \"string\",\n  \"radioPolicy\": \"string\",\n  \"fastTransition\": \"string\",\n  \"enableFastlane\": false,\n  \"enableMACFilering\": false,\n  \"enableBroadcastSSID\": false,\n  \"enableWLANBandSelection\": false,\n  \"wirelessNetworkProfileName\": \"string\",\n  \"sitesNameHierarchyToMapTheProfile\": \"string\",\n  \"deviceName\": \"string\",\n  \"siteNameHierarchyToMapDevicePhysicalLocation\": \"string\",\n  \"managedAPLocations\": \"string\",\n  \"interfaceIPAddress\": \"string\",\n  \"interfaceNetMaskInCIDRFormat\": \"string\",\n  \"interfaceGatewayIPAddress\": \"string\",\n  \"interfaceLAGPortNumber\": 0,\n  \"siteNameHierarchyToMapAPPhysicalLocation\": \"string\",\n  \"apNames\": \"string\",\n  \"rfProfile\": \"string\"\n}"
                },
                "description": "Creates non fabric enterprise SSID, dynamic interface, Wireless Network Profile and provisions WLC and AP\n\n###### Request Model\n- root: (map, required)\n  - interfaceName: (string, required) Interface Name, Interface_0/0\n  - vlanId: (number, required) VLAN Id, 100\n  - ssidName: (string, required) SSID Name\n  - wlanType: (string, required) WLAN Type\n  - authenticationType: (enum[\"wpa2_enterprise\",\"wpa2_personal\",\"open\"], required) Authentication Type, If wpa2_enterprise selected then enter Authentication Server field. If wpa2_personal selected then enter Passpharse field\n  - authenticationServer: (string, optional) Authentication Server, Mandatory to fill if authenticationType is wpa2_enterprise\n  - passpharse: (string, optional) Passpharse, Mandatory to fill if authentication type is wpa2_personal\n  - trafficType: (enum[\"voicedata\",\"data\"], required) Traffic Type\n  - radioPolicy: (enum[\"0\",\"1\"], required) Radio Policy, 0 - Dual band operation (2.4GHz and 5GHz), 1 - Dual band operation with band select\n  - fastTransition: (enum[\"ADAPTIVE\",\"ENABLE\",\"DISABLE\"], required) Fast Transition (802.11r)\n  - enableFastlane: (boolean, required) Enable Fastlane\n  - enableMACFilering: (boolean, required) Enable MAC Filering\n  - enableBroadcastSSID: (boolean, required) Enable Broadcast SSID\n  - enableWLANBandSelection: (boolean, required) Enable WLAN Band Selection\n  - wirelessNetworkProfileName: (string, required) Wireless Network Profile Name\n  - sitesNameHierarchyToMapTheProfile: (string, required) Sites Name Hierarchy To Map The Profile, Enter full hierarchy. Use comma to enter multiple values\n  - deviceName: (string, required) Device Name\n  - siteNameHierarchyToMapDevicePhysicalLocation: (string, required) Site Name Hierarchy To Map Device Physical Location\n  - managedAPLocations: (string, required) Managed AP Locations, Use comma without space to enter multiple entries\n  - interfaceIPAddress: (string, required) Interface IP Address\n  - interfaceNetMaskInCIDRFormat: (string, required) Interface Net Mask In CIDRFormat, 22\n  - interfaceGatewayIPAddress: (string, required) Interface Gateway IP Address\n  - interfaceLAGPortNumber: (number, required) Interface LAG Port Number\n  - siteNameHierarchyToMapAPPhysicalLocation: (string, required) Site Name Hierarchy To Map AP Physical Location\n  - apNames: (string, required) AP Names, Should be from same site. Use comma without space to enter more than one AP name.\n  - rfProfile: (enum[\"LOW\",\"TYPICAL\",\"HIGH\"], required) RF Profile\n\n###### Response Model\n- root: (map, required)\n  - isError: (boolean, required) Is Error\n  - failureReason: (string, required) Failure Reason\n  - successMessage: (string, required) Success Message"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"isError\": false,\n  \"failureReason\": \"string\",\n  \"successMessage\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Delete SSID",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/delete-ssid/:deviceName/:wirelessNetworkProfileName/:ssidName/:interfaceName",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "delete-ssid",
                    ":deviceName",
                    ":wirelessNetworkProfileName",
                    ":ssidName",
                    ":interfaceName"
                  ],
                  "variable": [
                    {
                      "key": "deviceName",
                      "value": null,
                      "description": "(string, required) "
                    },
                    {
                      "key": "wirelessNetworkProfileName",
                      "value": null,
                      "description": "(string, required) "
                    },
                    {
                      "key": "ssidName",
                      "value": null,
                      "description": "(string, required) "
                    },
                    {
                      "key": "interfaceName",
                      "value": null,
                      "description": "(string, required) "
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "De-provision WLC, also removes wireless network profile, SSID and dynamic interface\n\n###### Response Model\n- root: (map, required)\n  - isError: (boolean, required) Is Error\n  - failureReason: (string, required) Failure Reason\n  - successMessage: (string, required) Success Message"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"isError\": false,\n  \"failureReason\": \"string\",\n  \"successMessage\": \"string\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Know Your Network",
      "item": [
        {
          "name": "Clients",
          "item": [
            {
              "name": "Client Detail",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-detail",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "client-detail"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": null,
                      "description": "(string, required) timestamp"
                    },
                    {
                      "key": "macAddress",
                      "value": null,
                      "description": "(string, required) MAC Address of the client"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Get Client Details for a single client\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detail: (map, optional)\n      - id: (string, optional) Id\n      - connectionStatus: (string, optional) Connection Status\n      - hostType: (string, optional) Host Type\n      - userId: (string, optional) User Id\n      - hostName: (string, optional) Host Name\n      - hostOs: (string, optional) Host Os\n      - hostVersion: (string, optional) Host Version\n      - subType: (string, optional) Sub Type\n      - lastUpdated: (string, optional) Last Updated\n      - healthScore: (array[map], optional)\n        - healthType: (string, optional) Health Type\n        - reason: (string, optional) Reason\n        - score: (string, optional) Score\n      - hostMac: (string, optional) Host Mac\n      - hostIpV4: (string, optional) Host Ip V4\n      - hostIpV6: (array[string], optional)\n      - authType: (string, optional) Auth Type\n      - vlanId: (string, optional) Vlan Id\n      - ssid: (string, optional) Ssid\n      - frequency: (string, optional) Frequency\n      - channel: (string, optional) Channel\n      - apGroup: (string, optional) Ap Group\n      - location: (string, optional) Location\n      - clientConnection: (string, optional) Client Connection\n      - connectedDevice: (array[string], optional)\n      - issueCount: (string, optional) Issue Count\n      - rssi: (string, optional) Rssi\n      - avgRssi: (string, optional) Avg Rssi\n      - snr: (string, optional) Snr\n      - avgSnr: (string, optional) Avg Snr\n      - dataRate: (string, optional) Data Rate\n      - txBytes: (string, optional) Tx Bytes\n      - rxBytes: (string, optional) Rx Bytes\n      - dnsSuccess: (string, optional) Dns Success\n      - dnsFailure: (string, optional) Dns Failure\n      - onboarding: (map, optional)\n        - averageRunDuration: (string, optional) Average Run Duration\n        - maxRunDuration: (string, optional) Max Run Duration\n        - averageAssocDuration: (string, optional) Average Assoc Duration\n        - maxAssocDuration: (string, optional) Max Assoc Duration\n        - averageAuthDuration: (string, optional) Average Auth Duration\n        - maxAuthDuration: (string, optional) Max Auth Duration\n        - averageDhcpDuration: (string, optional) Average Dhcp Duration\n        - maxDhcpDuration: (string, optional) Max Dhcp Duration\n        - aaaServerIp: (string, optional) Aaa Server Ip\n        - dhcpServerIp: (string, optional) Dhcp Server Ip\n        - authDoneTime: (string, optional) Auth Done Time\n        - assocDoneTime: (string, optional) Assoc Done Time\n        - dhcpDoneTime: (string, optional) Dhcp Done Time\n      - onboardingTime: (string, optional) Onboarding Time\n      - port: (string, optional) Port\n    - connectionInfo: (map, optional)\n      - hostType: (string, optional) Host Type\n      - nwDeviceName: (string, optional) Nw Device Name\n      - nwDeviceMac: (string, optional) Nw Device Mac\n      - protocol: (string, optional) Protocol\n      - band: (string, optional) Band\n      - spatialStream: (string, optional) Spatial Stream\n      - channel: (string, optional) Channel\n      - channelWidth: (string, optional) Channel Width\n      - wmm: (string, optional) Wmm\n      - uapsd: (string, optional) Uapsd\n      - timestamp: (string, optional) Timestamp\n    - topology: (map, optional)\n      - nodes: (array[map], optional)\n        - role: (string, optional) Role\n        - name: (string, optional) Name\n        - id: (string, optional) Id\n        - description: (string, optional) Description\n        - deviceType: (string, optional) Device Type\n        - platformId: (string, optional) Platform Id\n        - family: (string, optional) Family\n        - ip: (string, optional) Ip\n        - softwareVersion: (string, optional) Software Version\n        - userId: (string, optional) User Id\n        - nodeType: (string, optional) Node Type\n        - radioFrequency: (string, optional) Radio Frequency\n        - clients: (string, optional) Clients\n        - count: (string, optional) Count\n        - healthScore: (string, optional) Health Score\n        - level: (string, optional) Level\n        - fabricGroup: (string, optional) Fabric Group\n        - connectedDevice: (string, optional) Connected Device\n      - links: (array[map], optional)\n        - source: (string, optional) Source\n        - linkStatus: (string, optional) Link Status\n        - label: (array[string], optional)\n        - target: (string, optional) Target\n        - id: (string, optional) Id\n        - portUtilization: (string, optional) Port Utilization"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"detail\": {\n      \"id\": \"string\",\n      \"connectionStatus\": \"string\",\n      \"hostType\": \"string\",\n      \"userId\": \"string\",\n      \"hostName\": \"string\",\n      \"hostOs\": \"string\",\n      \"hostVersion\": \"string\",\n      \"subType\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"healthScore\": [\n        {\n          \"healthType\": \"string\",\n          \"reason\": \"string\",\n          \"score\": \"string\"\n        }\n      ],\n      \"hostMac\": \"string\",\n      \"hostIpV4\": \"string\",\n      \"hostIpV6\": [\n        \"string\"\n      ],\n      \"authType\": \"string\",\n      \"vlanId\": \"string\",\n      \"ssid\": \"string\",\n      \"frequency\": \"string\",\n      \"channel\": \"string\",\n      \"apGroup\": \"string\",\n      \"location\": \"string\",\n      \"clientConnection\": \"string\",\n      \"connectedDevice\": [\n        \"string\"\n      ],\n      \"issueCount\": \"string\",\n      \"rssi\": \"string\",\n      \"avgRssi\": \"string\",\n      \"snr\": \"string\",\n      \"avgSnr\": \"string\",\n      \"dataRate\": \"string\",\n      \"txBytes\": \"string\",\n      \"rxBytes\": \"string\",\n      \"dnsSuccess\": \"string\",\n      \"dnsFailure\": \"string\",\n      \"onboarding\": {\n        \"averageRunDuration\": \"string\",\n        \"maxRunDuration\": \"string\",\n        \"averageAssocDuration\": \"string\",\n        \"maxAssocDuration\": \"string\",\n        \"averageAuthDuration\": \"string\",\n        \"maxAuthDuration\": \"string\",\n        \"averageDhcpDuration\": \"string\",\n        \"maxDhcpDuration\": \"string\",\n        \"aaaServerIp\": \"string\",\n        \"dhcpServerIp\": \"string\",\n        \"authDoneTime\": \"string\",\n        \"assocDoneTime\": \"string\",\n        \"dhcpDoneTime\": \"string\"\n      },\n      \"onboardingTime\": \"string\",\n      \"port\": \"string\"\n    },\n    \"connectionInfo\": {\n      \"hostType\": \"string\",\n      \"nwDeviceName\": \"string\",\n      \"nwDeviceMac\": \"string\",\n      \"protocol\": \"string\",\n      \"band\": \"string\",\n      \"spatialStream\": \"string\",\n      \"channel\": \"string\",\n      \"channelWidth\": \"string\",\n      \"wmm\": \"string\",\n      \"uapsd\": \"string\",\n      \"timestamp\": \"string\"\n    },\n    \"topology\": {\n      \"nodes\": [\n        {\n          \"role\": \"string\",\n          \"name\": \"string\",\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"deviceType\": \"string\",\n          \"platformId\": \"string\",\n          \"family\": \"string\",\n          \"ip\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"userId\": \"string\",\n          \"nodeType\": \"string\",\n          \"radioFrequency\": \"string\",\n          \"clients\": \"string\",\n          \"count\": \"string\",\n          \"healthScore\": \"string\",\n          \"level\": \"string\",\n          \"fabricGroup\": \"string\",\n          \"connectedDevice\": \"string\"\n        }\n      ],\n      \"links\": [\n        {\n          \"source\": \"string\",\n          \"linkStatus\": \"string\",\n          \"label\": [\n            \"string\"\n          ],\n          \"target\": \"string\",\n          \"id\": \"string\",\n          \"portUtilization\": \"string\"\n        }\n      ]\n    }\n  }\n}"
                }
              ]
            },
            {
              "name": "Client Health",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-health",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "client-health"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "startTime",
                      "value": null,
                      "description": "(string, required) Start Time"
                    },
                    {
                      "key": "endTime",
                      "value": null,
                      "description": "(string, required) End Time"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Get overall Client Health along with beak down on categories of wired and wireless\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteId: (string, optional) Site Id\n    - scoreDetail: (array[map], optional)\n      - scoreCategory: (map, optional)\n        - scoreCategory: (string, optional) Score Category\n        - value: (string, optional) Value\n      - scoreValue: (string, optional) Score Value\n      - clientCount: (string, optional) Client Count\n      - clientUniqueCount: (string, optional) Client Unique Count\n      - starttime: (string, optional) Starttime\n      - endtime: (string, optional) Endtime\n      - scoreList: (array[string], optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"siteId\": \"string\",\n      \"scoreDetail\": [\n        {\n          \"scoreCategory\": {\n            \"scoreCategory\": \"string\",\n            \"value\": \"string\"\n          },\n          \"scoreValue\": \"string\",\n          \"clientCount\": \"string\",\n          \"clientUniqueCount\": \"string\",\n          \"starttime\": \"string\",\n          \"endtime\": \"string\",\n          \"scoreList\": [\n            \"string\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Devices",
          "item": [
            {
              "name": "Retrieves all interfaces",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets all available interfaces with a maximum limit of 500\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves interface by ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Interface ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the interface for the given interface ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"adminStatus\": \"string\",\n    \"className\": \"string\",\n    \"description\": \"string\",\n    \"deviceId\": \"string\",\n    \"duplex\": \"string\",\n    \"id\": \"string\",\n    \"ifIndex\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceType\": \"string\",\n    \"ipv4Address\": \"string\",\n    \"ipv4Mask\": \"string\",\n    \"isisSupport\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"macAddress\": \"string\",\n    \"mappedPhysicalInterfaceId\": \"string\",\n    \"mappedPhysicalInterfaceName\": \"string\",\n    \"mediaType\": \"string\",\n    \"nativeVlanId\": \"string\",\n    \"ospfSupport\": \"string\",\n    \"pid\": \"string\",\n    \"portMode\": \"string\",\n    \"portName\": \"string\",\n    \"portType\": \"string\",\n    \"serialNo\": \"string\",\n    \"series\": \"string\",\n    \"speed\": \"string\",\n    \"status\": \"string\",\n    \"vlanId\": \"string\",\n    \"voiceVlan\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves interface count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "count"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the count of interfaces for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves interfaces by IP address",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/ip-address/:ipAddress",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "ip-address",
                    ":ipAddress"
                  ],
                  "variable": [
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(string, required) IP address of the interface"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets list of interfaces with the given IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves ISIS interfaces",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/isis",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "isis"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the interfaces that has ISIS enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves device interfaces",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/network-device/:deviceId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "network-device",
                    ":deviceId"
                  ],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets list of interfaces for the given device\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves device interfaces in the given range",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/network-device/:deviceId/:startIndex/:recordsToReturn",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "network-device",
                    ":deviceId",
                    ":startIndex",
                    ":recordsToReturn"
                  ],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) Device ID"
                    },
                    {
                      "key": "startIndex",
                      "value": "",
                      "description": "(integer, required) Start index"
                    },
                    {
                      "key": "recordsToReturn",
                      "value": "",
                      "description": "(integer, required) Number of records to return"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of interfaces for the device for the specified range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves device interface count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/network-device/:deviceId/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "network-device",
                    ":deviceId",
                    "count"
                  ],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the interface count for the given device\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves interface for the given device and interface name",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/network-device/:deviceId/interface-name",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "network-device",
                    ":deviceId",
                    "interface-name"
                  ],
                  "variable": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, required) Interface name"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the interface for the given device ID and for the given interface name\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"adminStatus\": \"string\",\n    \"className\": \"string\",\n    \"description\": \"string\",\n    \"deviceId\": \"string\",\n    \"duplex\": \"string\",\n    \"id\": \"string\",\n    \"ifIndex\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceType\": \"string\",\n    \"ipv4Address\": \"string\",\n    \"ipv4Mask\": \"string\",\n    \"isisSupport\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"macAddress\": \"string\",\n    \"mappedPhysicalInterfaceId\": \"string\",\n    \"mappedPhysicalInterfaceName\": \"string\",\n    \"mediaType\": \"string\",\n    \"nativeVlanId\": \"string\",\n    \"ospfSupport\": \"string\",\n    \"pid\": \"string\",\n    \"portMode\": \"string\",\n    \"portName\": \"string\",\n    \"portType\": \"string\",\n    \"serialNo\": \"string\",\n    \"series\": \"string\",\n    \"speed\": \"string\",\n    \"status\": \"string\",\n    \"vlanId\": \"string\",\n    \"voiceVlan\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves OSPF interfaces",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/interface/ospf",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "interface",
                    "ospf"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the interfaces that has OSPF enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves all network devices",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "hostname",
                      "value": "",
                      "description": "(array, optional) hostname"
                    },
                    {
                      "key": "managementIpAddress",
                      "value": "",
                      "description": "(array, optional) managementIpAddress"
                    },
                    {
                      "key": "macAddress",
                      "value": "",
                      "description": "(array, optional) macAddress"
                    },
                    {
                      "key": "locationName",
                      "value": "",
                      "description": "(array, optional) locationName"
                    },
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(array, optional) serialNumber"
                    },
                    {
                      "key": "location",
                      "value": "",
                      "description": "(array, optional) location"
                    },
                    {
                      "key": "family",
                      "value": "",
                      "description": "(array, optional) family"
                    },
                    {
                      "key": "type",
                      "value": "",
                      "description": "(array, optional) type"
                    },
                    {
                      "key": "series",
                      "value": "",
                      "description": "(array, optional) series"
                    },
                    {
                      "key": "collectionStatus",
                      "value": "",
                      "description": "(array, optional) collectionStatus"
                    },
                    {
                      "key": "collectionInterval",
                      "value": "",
                      "description": "(array, optional) collectionInterval"
                    },
                    {
                      "key": "notSyncedForMinutes",
                      "value": "",
                      "description": "(array, optional) notSyncedForMinutes"
                    },
                    {
                      "key": "errorCode",
                      "value": "",
                      "description": "(array, optional) errorCode"
                    },
                    {
                      "key": "errorDescription",
                      "value": "",
                      "description": "(array, optional) errorDescription"
                    },
                    {
                      "key": "softwareVersion",
                      "value": "",
                      "description": "(array, optional) softwareVersion"
                    },
                    {
                      "key": "softwareType",
                      "value": "",
                      "description": "(array, optional) softwareType"
                    },
                    {
                      "key": "platformId",
                      "value": "",
                      "description": "(array, optional) platformId"
                    },
                    {
                      "key": "role",
                      "value": "",
                      "description": "(array, optional) role"
                    },
                    {
                      "key": "reachabilityStatus",
                      "value": "",
                      "description": "(array, optional) reachabilityStatus"
                    },
                    {
                      "key": "upTime",
                      "value": "",
                      "description": "(array, optional) upTime"
                    },
                    {
                      "key": "associatedWlcIp",
                      "value": "",
                      "description": "(array, optional) associatedWlcIp"
                    },
                    {
                      "key": "license.name",
                      "value": "",
                      "description": "(array, optional) licenseName"
                    },
                    {
                      "key": "license.type",
                      "value": "",
                      "description": "(array, optional) licenseType"
                    },
                    {
                      "key": "license.status",
                      "value": "",
                      "description": "(array, optional) licenseStatus"
                    },
                    {
                      "key": "module+name",
                      "value": "",
                      "description": "(array, optional) moduleName"
                    },
                    {
                      "key": "module+equpimenttype",
                      "value": "",
                      "description": "(array, optional) moduleEqupimentType"
                    },
                    {
                      "key": "module+servicestate",
                      "value": "",
                      "description": "(array, optional) moduleServiceState"
                    },
                    {
                      "key": "module+vendorequipmenttype",
                      "value": "",
                      "description": "(array, optional) moduleVendorEquipmentType"
                    },
                    {
                      "key": "module+partnumber",
                      "value": "",
                      "description": "(array, optional) modulePartNumber"
                    },
                    {
                      "key": "module+operationstatecode",
                      "value": "",
                      "description": "(array, optional) moduleOperationStateCode"
                    },
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, optional) Accepts comma separated id's and return list of network-devices for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of first 500 network devices sorted lexicographically based on host name. It can be filtered using management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"apManagerInterfaceIp\": \"string\",\n      \"associatedWlcIp\": \"string\",\n      \"bootDateTime\": \"string\",\n      \"collectionInterval\": \"string\",\n      \"collectionStatus\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryStatusDetail\": \"string\",\n      \"lastUpdateTime\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"platformId\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"series\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"softwareType\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tagCount\": \"string\",\n      \"tunnelUdpPort\": \"string\",\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"waasDeviceMode\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Network device POST api",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
                },
                "description": "Adds the device with given credential\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Network device sync api",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
                },
                "description": "Sync the devices provided as input\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Delete network device by ID",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": [
                    {
                      "key": "isForceDelete",
                      "value": "",
                      "description": "(boolean, optional) isForceDelete"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Removes the network device for the given ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device by ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network device for the given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device brief by ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id/brief",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id",
                    "brief"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets brief network device info such as hostname, management IP address for the given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, required)\n    - role: (string, required)\n    - roleSource: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the collection interval specified by device ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id/collection-schedule",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id",
                    "collection-schedule"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieves collection interval by device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Get the organizations chosen while adding the meraki dashboard",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id/meraki-organization",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id",
                    "meraki-organization"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to get the selected organizations for the meraki dashboard\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves list of VLAN data that are associated with interface for a device",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id/vlan",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id",
                    "vlan"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) deviceUUID"
                    }
                  ],
                  "query": [
                    {
                      "key": "interfaceType",
                      "value": "",
                      "description": "(string, optional) Vlan assocaited with sub-interface"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "getDeviceVLANData\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - interfaceName: (string, required)\n    - ipAddress: (string, required)\n    - mask: (integer, required)\n    - networkAddress: (string, required)\n    - numberOfIPs: (integer, required)\n    - prefix: (string, required)\n    - vlanNumber: (integer, required)\n    - vlanType: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"interfaceName\": \"string\",\n      \"ipAddress\": \"string\",\n      \"mask\": 0,\n      \"networkAddress\": \"string\",\n      \"numberOfIPs\": 0,\n      \"prefix\": \"string\",\n      \"vlanNumber\": 0,\n      \"vlanType\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves wireless lan conrtoller info by Device ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:id/wireless-info",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":id",
                    "wireless-info"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the wireless lan controller info using the given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminEnabledPorts: (array[integer], optional)\n    - apGroupName: (string, optional)\n    - deviceId: (string, optional)\n    - ethMacAddress: (string, optional)\n    - flexGroupName: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - lagModeEnabled: (boolean, optional)\n    - netconfEnabled: (boolean, optional)\n    - wirelessLicenseInfo: (enum[\"ADVANTAGE\",\"ESSENTIALS\"], optional)\n    - wirelessPackageInstalled: (boolean, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"adminEnabledPorts\": [\n      0\n    ],\n    \"apGroupName\": \"string\",\n    \"deviceId\": \"string\",\n    \"ethMacAddress\": \"string\",\n    \"flexGroupName\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"lagModeEnabled\": false,\n    \"netconfEnabled\": false,\n    \"wirelessLicenseInfo\": \"string\",\n    \"wirelessPackageInstalled\": false\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves device config",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:networkDeviceId/config",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":networkDeviceId",
                    "config"
                  ],
                  "variable": [
                    {
                      "key": "networkDeviceId",
                      "value": "",
                      "description": "(string, required) networkDeviceId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the device config by device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": \"string\",\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device by range",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/:startIndex/:recordsToReturn",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    ":startIndex",
                    ":recordsToReturn"
                  ],
                  "variable": [
                    {
                      "key": "startIndex",
                      "value": "",
                      "description": "(integer, required) Start index"
                    },
                    {
                      "key": "recordsToReturn",
                      "value": "",
                      "description": "(integer, required) Number of records to return"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of network devices for the given range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"apManagerInterfaceIp\": \"string\",\n      \"associatedWlcIp\": \"string\",\n      \"bootDateTime\": \"string\",\n      \"collectionInterval\": \"string\",\n      \"collectionStatus\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryStatusDetail\": \"string\",\n      \"lastUpdateTime\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"platformId\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"series\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"softwareType\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tagCount\": \"string\",\n      \"tunnelUdpPort\": \"string\",\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"waasDeviceMode\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves all network devices",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/autocomplete",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "autocomplete"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "vrfName",
                      "value": "",
                      "description": "(string, optional) vrfName"
                    },
                    {
                      "key": "managementIpAddress",
                      "value": "",
                      "description": "(string, optional) managementIpAddress"
                    },
                    {
                      "key": "hostname",
                      "value": "",
                      "description": "(string, optional) hostname"
                    },
                    {
                      "key": "macAddress",
                      "value": "",
                      "description": "(string, optional) macAddress"
                    },
                    {
                      "key": "family",
                      "value": "",
                      "description": "(string, optional) family"
                    },
                    {
                      "key": "collectionStatus",
                      "value": "",
                      "description": "(string, optional) collectionStatus"
                    },
                    {
                      "key": "collectionInterval",
                      "value": "",
                      "description": "(string, optional) collectionInterval"
                    },
                    {
                      "key": "softwareVersion",
                      "value": "",
                      "description": "(string, optional) softwareVersion"
                    },
                    {
                      "key": "softwareType",
                      "value": "",
                      "description": "(string, optional) softwareType"
                    },
                    {
                      "key": "reachabilityStatus",
                      "value": "",
                      "description": "(string, optional) reachabilityStatus"
                    },
                    {
                      "key": "reachabilityFailureReason",
                      "value": "",
                      "description": "(string, optional) reachabilityFailureReason"
                    },
                    {
                      "key": "errorCode",
                      "value": "",
                      "description": "(string, optional) errorCode"
                    },
                    {
                      "key": "platformId",
                      "value": "",
                      "description": "(string, optional) platformId"
                    },
                    {
                      "key": "series",
                      "value": "",
                      "description": "(string, optional) series"
                    },
                    {
                      "key": "type",
                      "value": "",
                      "description": "(string, optional) type"
                    },
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(string, optional) serialNumber"
                    },
                    {
                      "key": "upTime",
                      "value": "",
                      "description": "(string, optional) upTime"
                    },
                    {
                      "key": "role",
                      "value": "",
                      "description": "(string, optional) role"
                    },
                    {
                      "key": "roleSource",
                      "value": "",
                      "description": "(string, optional) roleSource"
                    },
                    {
                      "key": "associatedWlcIp",
                      "value": "",
                      "description": "(string, optional) associatedWlcIp"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(string, optional) offset"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(string, optional) limit"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of first 500 network devices sorted lexicographically based on host name. It can be filtered using management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \n}"
                }
              ]
            },
            {
              "name": "Updates network device role",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/brief",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "brief"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"roleSource\": \"string\"\n}"
                },
                "description": "Updates the role of the device as access, core, distribution, border router\n\n###### Request Model\n- root: (map, optional)\n  - id: (string, required)\n  - role: (string, required)\n  - roleSource: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the collection interval of all devices",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/collection-schedule/global",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "collection-schedule",
                    "global"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieves collection interval of all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves device config list",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/config",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "config"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the config for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpNeighbors: (string, optional)\n    - healthMonitor: (string, optional)\n    - id: (string, required)\n    - intfDescription: (string, optional)\n    - inventory: (string, optional)\n    - ipIntfBrief: (string, optional)\n    - macAddressTable: (string, optional)\n    - runningConfig: (string, required)\n    - snmp: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cdpNeighbors\": \"string\",\n      \"healthMonitor\": \"string\",\n      \"id\": \"string\",\n      \"intfDescription\": \"string\",\n      \"inventory\": \"string\",\n      \"ipIntfBrief\": \"string\",\n      \"macAddressTable\": \"string\",\n      \"runningConfig\": \"string\",\n      \"snmp\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves config count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/config/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "config",
                    "count"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the count of device configs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "count"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the count of network devices filtered by management IP address, mac address, hostname and location name\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Export network-device to file",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/file",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "file"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"id\": \"string\",\n  \"operationEnum\": \"string\",\n  \"parameters\": [\n    \"string\"\n  ],\n  \"password\": \"string\"\n}"
                },
                "description": "Export the selected network-device to a file\n\n###### Request Model\n- root: (map, optional)\n  - deviceUuids: (array[string], required)\n  - id: (string, optional)\n  - operationEnum: (enum[\"CREDENTIALDETAILS\",\"DEVICEDETAILS\"], optional)\n  - parameters: (array[string], optional)\n  - password: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves all functional-capability of devices",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/functional-capability",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "functional-capability"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, optional) Accepts comma separated deviceid's and return list of functional-capabilities for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
                    },
                    {
                      "key": "functionName",
                      "value": "",
                      "description": "(array, optional) functionName"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the functional-capability for given devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - deviceId: (string, optional)\n    - functionalCapability: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - functionDetails: (array[map], optional)\n        - attributeInfo: (map, optional)\n        - id: (string, optional)\n        - propertyName: (string, optional)\n        - stringValue: (string, optional)\n      - functionName: (string, optional)\n      - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n      - id: (string, optional)\n    - id: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"deviceId\": \"string\",\n      \"functionalCapability\": [\n        {\n          \"attributeInfo\": {\n            \n          },\n          \"functionDetails\": [\n            {\n              \"attributeInfo\": {\n                \n              },\n              \"id\": \"string\",\n              \"propertyName\": \"string\",\n              \"stringValue\": \"string\"\n            }\n          ],\n          \"functionName\": \"string\",\n          \"functionOpState\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"id\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gets the functional capability by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/functional-capability/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "functional-capability",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Device ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieve functional capability with given id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - functionDetails: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - id: (string, optional)\n      - propertyName: (string, optional)\n      - stringValue: (string, optional)\n    - functionName: (string, optional)\n    - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n    - id: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"attributeInfo\": {\n      \n    },\n    \"functionDetails\": [\n      {\n        \"attributeInfo\": {\n          \n        },\n        \"id\": \"string\",\n        \"propertyName\": \"string\",\n        \"stringValue\": \"string\"\n      }\n    ],\n    \"functionName\": \"string\",\n    \"functionOpState\": \"string\",\n    \"id\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve the values of given fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/functional-capability/autocomplete",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "functional-capability",
                    "autocomplete"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "functionName",
                      "value": "",
                      "description": "(array, optional) functionName"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the field values based on given filter\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device by IP address",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/ip-address/:ipAddress",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "ip-address",
                    ":ipAddress"
                  ],
                  "variable": [
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(string, required) Device IP address"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network device with the given IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gives all the modules associated with given device id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/module",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "module"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) deviceId"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(string, optional) limit"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(string, optional) offset"
                    },
                    {
                      "key": "nameList",
                      "value": "",
                      "description": "(array, optional) nameList"
                    },
                    {
                      "key": "vendorEquipmentTypeList",
                      "value": "",
                      "description": "(array, optional) vendorEquipmentTypeList"
                    },
                    {
                      "key": "partNumberList",
                      "value": "",
                      "description": "(array, optional) partNumberList"
                    },
                    {
                      "key": "operationalStateCodeList",
                      "value": "",
                      "description": "(array, optional) operationalStateCodeList"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get modules of the given device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"assemblyNumber\": \"string\",\n      \"assemblyRevision\": \"string\",\n      \"attributeInfo\": {\n        \n      },\n      \"containmentEntity\": \"string\",\n      \"description\": \"string\",\n      \"entityPhysicalIndex\": \"string\",\n      \"id\": \"string\",\n      \"isFieldReplaceable\": \"string\",\n      \"isReportingAlarmsAllowed\": \"string\",\n      \"manufacturer\": \"string\",\n      \"moduleIndex\": 0,\n      \"name\": \"string\",\n      \"operationalStateCode\": \"string\",\n      \"partNumber\": \"string\",\n      \"serialNumber\": \"string\",\n      \"vendorEquipmentType\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gives Module info by its id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/module/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "module",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get module by id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"assemblyNumber\": \"string\",\n    \"assemblyRevision\": \"string\",\n    \"attributeInfo\": {\n      \n    },\n    \"containmentEntity\": \"string\",\n    \"description\": \"string\",\n    \"entityPhysicalIndex\": \"string\",\n    \"id\": \"string\",\n    \"isFieldReplaceable\": \"string\",\n    \"isReportingAlarmsAllowed\": \"string\",\n    \"manufacturer\": \"string\",\n    \"moduleIndex\": 0,\n    \"name\": \"string\",\n    \"operationalStateCode\": \"string\",\n    \"partNumber\": \"string\",\n    \"serialNumber\": \"string\",\n    \"vendorEquipmentType\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gives total number of Modules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/module/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "module",
                    "count"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "deviceId",
                      "value": "",
                      "description": "(string, required) deviceId"
                    },
                    {
                      "key": "nameList",
                      "value": "",
                      "description": "(array, optional) nameList"
                    },
                    {
                      "key": "vendorEquipmentTypeList",
                      "value": "",
                      "description": "(array, optional) vendorEquipmentTypeList"
                    },
                    {
                      "key": "partNumberList",
                      "value": "",
                      "description": "(array, optional) partNumberList"
                    },
                    {
                      "key": "operationalStateCodeList",
                      "value": "",
                      "description": "(array, optional) operationalStateCodeList"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get Module Count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves network device by serial number",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/serial-number/:serialNumber",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "serial-number",
                    ":serialNumber"
                  ],
                  "variable": [
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(string, required) Device serial number"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network device with the given serial number\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Network device sync api",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/sync",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "sync"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "forceSync",
                      "value": "",
                      "description": "(boolean, optional) forceSync"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"any\"\n]"
                },
                "description": "Sync's the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if avaiable, else the sync will fail. Result can be seen in the child task of each device\n\n###### Request Model\n- root: (array[any], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates certificate validation status and returns tenantId",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device/tenantinfo/macaddress",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device",
                    "tenantinfo",
                    "macaddress"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(string, optional) Serial number of the device"
                    },
                    {
                      "key": "macaddress",
                      "value": "",
                      "description": "(string, optional) Mac addres of the device"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Registers a device for WSA notification\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - macAddress: (string, optional)\n    - modelNumber: (string, optional)\n    - name: (string, optional)\n    - serialNumber: (string, optional)\n    - tenantId: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"macAddress\": \"string\",\n    \"modelNumber\": \"string\",\n    \"name\": \"string\",\n    \"serialNumber\": \"string\",\n    \"tenantId\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Network Device Detail",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device-detail",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "network-device-detail"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": null,
                      "description": "(string, optional) timestamp"
                    },
                    {
                      "key": "searchBy",
                      "value": null,
                      "description": "(string, optional) MAC Address or UUID or Name of the Device"
                    },
                    {
                      "key": "identifier",
                      "value": null,
                      "description": "(string, optional) macAddress or uuid or nwDeviceName"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Get Network Device Detail\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - managementIpAddr: (string, optional) Management Ip Addr\n    - serialNumber: (string, optional) Serial Number\n    - nwDeviceName: (string, optional) Nw Device Name\n    - opState: (string, optional) Op State\n    - platformId: (string, optional) Platform Id\n    - nwDeviceId: (string, optional) Nw Device Id\n    - sysUptime: (string, optional) Sys Uptime\n    - mode: (string, optional) Mode\n    - resetReason: (string, optional) Reset Reason\n    - nwDeviceRole: (string, optional) Nw Device Role\n    - upTime: (string, optional) Up Time\n    - nwDeviceFamily: (string, optional) Nw Device Family\n    - macAddress: (string, optional) Mac Address\n    - connectedTime: (string, optional) Connected Time\n    - softwareVersion: (string, optional) Software Version\n    - subMode: (string, optional) Sub Mode\n    - nwDeviceType: (string, optional) Nw Device Type\n    - overallHealth: (string, optional) Overall Health\n    - memoryScore: (string, optional) Memory Score\n    - cpuScore: (string, optional) Cpu Score"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"managementIpAddr\": \"string\",\n    \"serialNumber\": \"string\",\n    \"nwDeviceName\": \"string\",\n    \"opState\": \"string\",\n    \"platformId\": \"string\",\n    \"nwDeviceId\": \"string\",\n    \"sysUptime\": \"string\",\n    \"mode\": \"string\",\n    \"resetReason\": \"string\",\n    \"nwDeviceRole\": \"string\",\n    \"upTime\": \"string\",\n    \"nwDeviceFamily\": \"string\",\n    \"macAddress\": \"string\",\n    \"connectedTime\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"subMode\": \"string\",\n    \"nwDeviceType\": \"string\",\n    \"overallHealth\": \"string\",\n    \"memoryScore\": \"string\",\n    \"cpuScore\": \"string\"\n  }\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Networks",
          "item": [
            {
              "name": "getL2Topology",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/topology/l2/:vlanID",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "topology",
                    "l2",
                    ":vlanID"
                  ],
                  "variable": [
                    {
                      "key": "vlanID",
                      "value": "",
                      "description": "(string, required) Vlan Name for e.g Vlan1, Vlan23 etc"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain the Layer 2 topology by Vlan ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getL3Topology",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/topology/l3/:topologyType",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "topology",
                    "l3",
                    ":topologyType"
                  ],
                  "variable": [
                    {
                      "key": "topologyType",
                      "value": "",
                      "description": "(string, required) Type of topology(OSPF,ISIS,etc)"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain Layer 3 device topology by routing protocol type\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getPhysicalTopology",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/topology/physical-topology",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "topology",
                    "physical-topology"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "nodeType",
                      "value": "",
                      "description": "(string, optional) nodeType"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain the raw physical topology and filter based on nodeType\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getSiteTopology",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/topology/site-topology",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "topology",
                    "site-topology"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain the site topology\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - sites: (array[map], optional)\n      - displayName: (string, optional)\n      - groupNameHierarchy: (string, optional)\n      - id: (string, optional)\n      - latitude: (string, optional)\n      - locationAddress: (string, optional)\n      - locationCountry: (string, optional)\n      - locationType: (string, optional)\n      - longitude: (string, optional)\n      - name: (string, optional)\n      - parentId: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"sites\": [\n      {\n        \"displayName\": \"string\",\n        \"groupNameHierarchy\": \"string\",\n        \"id\": \"string\",\n        \"latitude\": \"string\",\n        \"locationAddress\": \"string\",\n        \"locationCountry\": \"string\",\n        \"locationType\": \"string\",\n        \"longitude\": \"string\",\n        \"name\": \"string\",\n        \"parentId\": \"string\"\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getVlanNames",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/topology/vlan/vlan-names",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "topology",
                    "vlan",
                    "vlan-names"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain the list of vlan names\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Network Health",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-health",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "network-health"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "startTime",
                      "value": null,
                      "description": "(string, required) Start Time"
                    },
                    {
                      "key": "endTime",
                      "value": null,
                      "description": "(string, required) End Time"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Network Devices and their health by category"
              },
              "response": null
            }
          ]
        },
        {
          "name": "Sites",
          "item": [
            {
              "name": "Site Hierarchy",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/site-hierarchy",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "dna",
                    "intent",
                    "api",
                    "v1",
                    "site-hierarchy"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": null,
                      "description": "(string, required) Timestamp "
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "__runsync",
                    "value": false,
                    "description": "(boolean, optional) Enable this parameter to execute the API and return a response synchronously"
                  },
                  {
                    "key": "__timeout",
                    "value": "10",
                    "description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
                  }
                ],
                "body": null,
                "description": "Site Hierarchy along with health Info\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteName: (string, optional) Site Name\n    - siteId: (string, optional) Site Id\n    - parentSiteId: (string, optional) Parent Site Id\n    - parentSiteName: (string, optional) Parent Site Name\n    - siteType: (string, optional) Site Type\n    - healthyNetworkDevicePercentage: (string, optional) Healthy Network Device Percentage\n    - healthyClientsPercentage: (string, optional) Healthy Clients Percentage\n    - clientHealthWired: (string, optional) Client Health Wired\n    - clientHealthWireless: (string, optional) Client Health Wireless\n    - numberOfClients: (string, optional) Number Of Clients\n    - clientNumberOfIssues: (string, optional) Client Number Of Issues\n    - networkNumberOfIssues: (string, optional) Network Number Of Issues\n    - numberOfNetworkDevice: (string, optional) Number Of Network Device\n    - networkHealthAverage: (string, optional) Network Health Average\n    - networkHealthAccess: (string, optional) Network Health Access\n    - networkHealthCore: (string, optional) Network Health Core\n    - networkHealthDistribution: (string, optional) Network Health Distribution\n    - networkHealthRouter: (string, optional) Network Health Router\n    - networkHealthWireless: (string, optional) Network Health Wireless\n    - networkHealthOthers: (string, optional) Network Health Others\n    - numberOfWiredClients: (string, optional) Number Of Wired Clients\n    - numberOfWirelessClients: (string, optional) Number Of Wireless Clients\n    - wiredGoodClients: (string, optional) Wired Good Clients\n    - wirelessGoodClients: (string, optional) Wireless Good Clients\n    - clientIssueCount: (string, optional) Client Issue Count\n    - overallGoodDevices: (string, optional) Overall Good Devices\n    - accessGoodCount: (string, optional) Access Good Count\n    - accessTotalCount: (string, optional) Access Total Count\n    - coreGoodCount: (string, optional) Core Good Count\n    - coreTotalCount: (string, optional) Core Total Count\n    - distributionGoodCount: (string, optional) Distribution Good Count\n    - distributionTotalCount: (string, optional) Distribution Total Count\n    - routerGoodCount: (string, optional) Router Good Count\n    - routerTotalCount: (string, optional) Router Total Count\n    - wirelessDeviceGoodCount: (string, optional) Wireless Device Good Count\n    - wirelessDeviceTotalCount: (string, optional) Wireless Device Total Count\n    - applicationHealth: (string, optional) Application Health\n    - applicationGoodCount: (string, optional) Application Good Count\n    - applicationTotalCount: (string, optional) Application Total Count\n    - applicationBytesTotalCount: (string, optional) Application Bytes Total Count"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"siteName\": \"string\",\n      \"siteId\": \"string\",\n      \"parentSiteId\": \"string\",\n      \"parentSiteName\": \"string\",\n      \"siteType\": \"string\",\n      \"healthyNetworkDevicePercentage\": \"string\",\n      \"healthyClientsPercentage\": \"string\",\n      \"clientHealthWired\": \"string\",\n      \"clientHealthWireless\": \"string\",\n      \"numberOfClients\": \"string\",\n      \"clientNumberOfIssues\": \"string\",\n      \"networkNumberOfIssues\": \"string\",\n      \"numberOfNetworkDevice\": \"string\",\n      \"networkHealthAverage\": \"string\",\n      \"networkHealthAccess\": \"string\",\n      \"networkHealthCore\": \"string\",\n      \"networkHealthDistribution\": \"string\",\n      \"networkHealthRouter\": \"string\",\n      \"networkHealthWireless\": \"string\",\n      \"networkHealthOthers\": \"string\",\n      \"numberOfWiredClients\": \"string\",\n      \"numberOfWirelessClients\": \"string\",\n      \"wiredGoodClients\": \"string\",\n      \"wirelessGoodClients\": \"string\",\n      \"clientIssueCount\": \"string\",\n      \"overallGoodDevices\": \"string\",\n      \"accessGoodCount\": \"string\",\n      \"accessTotalCount\": \"string\",\n      \"coreGoodCount\": \"string\",\n      \"coreTotalCount\": \"string\",\n      \"distributionGoodCount\": \"string\",\n      \"distributionTotalCount\": \"string\",\n      \"routerGoodCount\": \"string\",\n      \"routerTotalCount\": \"string\",\n      \"wirelessDeviceGoodCount\": \"string\",\n      \"wirelessDeviceTotalCount\": \"string\",\n      \"applicationHealth\": \"string\",\n      \"applicationGoodCount\": \"string\",\n      \"applicationTotalCount\": \"string\",\n      \"applicationBytesTotalCount\": \"string\"\n    }\n  ]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Operational Tools",
      "item": [
        {
          "name": "General",
          "item": [
            {
              "name": "Downloads a file referred by the fileId",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/file/:fileId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "file",
                    ":fileId"
                  ],
                  "variable": [
                    {
                      "key": "fileId",
                      "value": "",
                      "description": "(string, required) File Identification number"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to download a file referred by the fileId\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Returns list of available namespaces",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/file/namespace",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "file",
                    "namespace"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain a list of available namespaces\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Returns list of files under a specific namespace",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/file/namespace/:nameSpace",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "file",
                    "namespace",
                    ":nameSpace"
                  ],
                  "variable": [
                    {
                      "key": "nameSpace",
                      "value": "",
                      "description": "(string, required) A listing of fileId's"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to obtain a list of files under a specific namespace\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - downloadPath: (string, required)\n    - encrypted: (boolean, optional)\n    - fileFormat: (string, required)\n    - fileSize: (string, required)\n    - id: (string, required)\n    - md5Checksum: (string, required)\n    - name: (string, required)\n    - nameSpace: (string, required)\n    - sftpServerList: (array[any], optional)\n    - sha1Checksum: (string, required)\n    - taskId: (any, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"downloadPath\": \"string\",\n      \"encrypted\": false,\n      \"fileFormat\": \"string\",\n      \"fileSize\": \"string\",\n      \"id\": \"string\",\n      \"md5Checksum\": \"string\",\n      \"name\": \"string\",\n      \"nameSpace\": \"string\",\n      \"sftpServerList\": [\n        \"any\"\n      ],\n      \"sha1Checksum\": \"string\",\n      \"taskId\": \"any\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Get filtered tasks",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/task",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "task"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "startTime",
                      "value": "",
                      "description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
                    },
                    {
                      "key": "endTime",
                      "value": "",
                      "description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
                    },
                    {
                      "key": "data",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this data"
                    },
                    {
                      "key": "errorCode",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that have this error code"
                    },
                    {
                      "key": "serviceType",
                      "value": "",
                      "description": "(string, optional) Fetch tasks with this service type"
                    },
                    {
                      "key": "username",
                      "value": "",
                      "description": "(string, optional) Fetch tasks with this username"
                    },
                    {
                      "key": "progress",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this progress"
                    },
                    {
                      "key": "isError",
                      "value": "",
                      "description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
                    },
                    {
                      "key": "failureReason",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this failure reason"
                    },
                    {
                      "key": "parentId",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that have this parent Id"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(string, optional) offset"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(string, optional) limit"
                    },
                    {
                      "key": "sortBy",
                      "value": "",
                      "description": "(string, optional) Sort results by this field"
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "(string, optional) Sort order - asc or dsc"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to retrieve task(s) based on various filters\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getTruststoreFileCount",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/task/:taskId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "task",
                    ":taskId"
                  ],
                  "variable": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(TaskId, required) UUID of the Task"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to retrieve a task based on their id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"additionalStatusURL\": \"string\",\n    \"data\": \"string\",\n    \"endTime\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorKey\": \"string\",\n    \"failureReason\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"isError\": false,\n    \"lastUpdate\": \"string\",\n    \"operationIdList\": \"any\",\n    \"parentId\": \"string\",\n    \"progress\": \"string\",\n    \"rootId\": \"string\",\n    \"serviceType\": \"string\",\n    \"startTime\": \"string\",\n    \"username\": \"string\",\n    \"version\": 0\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Get Task Tree",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/task/:taskId/tree",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "task",
                    ":taskId",
                    "tree"
                  ],
                  "variable": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(TaskId, required) UUID of the Task"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to retrieve a task with its children tasks based on their id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Get task count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/task/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "task",
                    "count"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "startTime",
                      "value": "",
                      "description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
                    },
                    {
                      "key": "endTime",
                      "value": "",
                      "description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
                    },
                    {
                      "key": "data",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this data"
                    },
                    {
                      "key": "errorCode",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that have this error code"
                    },
                    {
                      "key": "serviceType",
                      "value": "",
                      "description": "(string, optional) Fetch tasks with this service type"
                    },
                    {
                      "key": "username",
                      "value": "",
                      "description": "(string, optional) Fetch tasks with this username"
                    },
                    {
                      "key": "progress",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this progress"
                    },
                    {
                      "key": "isError",
                      "value": "",
                      "description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
                    },
                    {
                      "key": "failureReason",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that contains this failure reason"
                    },
                    {
                      "key": "parentId",
                      "value": "",
                      "description": "(string, optional) Fetch tasks that have this parent Id"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to retrieve task count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "getTaskByOperationId",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/task/operation/:operationId/:offset/:limit",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "task",
                    "operation",
                    ":operationId",
                    ":offset",
                    ":limit"
                  ],
                  "variable": [
                    {
                      "key": "operationId",
                      "value": "",
                      "description": "(string, required) operationId"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, required) Index, minimum value is 0"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, required) The maximum value of {limit} supported is 500. <br/> Base 1 indexing for {limit}, minimum value is 1"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to find root tasks assoicated to an operationid \n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Command Runner",
          "item": [
            {
              "name": "Get all keywords of CLIs accepted by command runner",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device-poller/cli/legit-reads",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device-poller",
                    "cli",
                    "legit-reads"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get valid keywords\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Run read-only commands on devices to get their real-time configuration",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/network-device-poller/cli/read-request",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "network-device-poller",
                    "cli",
                    "read-request"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"commands\": [\n    \"string\"\n  ],\n  \"description\": \"string\",\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"name\": \"string\",\n  \"timeout\": 0\n}"
                },
                "description": "Submit request for read-only CLIs\n\n###### Request Model\n- root: (map, optional)\n  - commands: (array[string], required)\n  - description: (string, optional)\n  - deviceUuids: (array[string], required)\n  - name: (string, optional)\n  - timeout: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Network Discovery",
          "item": [
            {
              "name": "Deletes all discovery",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Stops all the discoveries and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Starts a new discovery process and returns a task-id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cdpLevel\": 0,\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": [\n    \"string\"\n  ],\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": [\n    \"string\"\n  ],\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"noAddNewDevice\": false,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": [\n    \"string\"\n  ],\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"reDiscovery\": false,\n  \"retry\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpROCommunityDesc\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRWCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"timeout\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": [\n    \"string\"\n  ]\n}"
                },
                "description": "Initiates discovery with the given parameters\n\n###### Request Model\n- root: (map, optional)\n  - cdpLevel: (integer, optional)\n  - discoveryType: (string, required)\n  - enablePasswordList: (array[string], optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - ipAddressList: (string, required)\n  - ipFilterList: (array[string], optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, required)\n  - netconfPort: (string, optional)\n  - noAddNewDevice: (boolean, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (array[string], optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - reDiscovery: (boolean, optional)\n  - retry: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpROCommunity: (string, optional)\n  - snmpROCommunityDesc: (string, optional)\n  - snmpRWCommunity: (string, optional)\n  - snmpRWCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - snmpVersion: (string, required)\n  - timeout: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates an existing discovery specified by id - only for starting/stopping the discovery",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"attributeInfo\": {\n    \n  },\n  \"cdpLevel\": 0,\n  \"deviceIds\": \"string\",\n  \"discoveryCondition\": \"string\",\n  \"discoveryStatus\": \"string\",\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": \"string\",\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"id\": \"string\",\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": \"string\",\n  \"isAutoCdp\": false,\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"numDevices\": 0,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": \"string\",\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"retryCount\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpRoCommunity\": \"string\",\n  \"snmpRoCommunityDesc\": \"string\",\n  \"snmpRwCommunity\": \"string\",\n  \"snmpRwCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"timeOut\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": \"string\"\n}"
                },
                "description": "Stops or starts an existing discovery\n\n###### Request Model\n- root: (map, optional)\n  - attributeInfo: (map, optional)\n  - cdpLevel: (integer, optional)\n  - deviceIds: (string, optional)\n  - discoveryCondition: (string, optional)\n  - discoveryStatus: (string, required)\n  - discoveryType: (string, optional)\n  - enablePasswordList: (string, optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - id: (string, required)\n  - ipAddressList: (string, optional)\n  - ipFilterList: (string, optional)\n  - isAutoCdp: (boolean, optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, optional)\n  - netconfPort: (string, optional)\n  - numDevices: (integer, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (string, optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - retryCount: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpRoCommunity: (string, optional)\n  - snmpRoCommunityDesc: (string, optional)\n  - snmpRwCommunity: (string, optional)\n  - snmpRwCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - timeOut: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deletes the discovery specified by id",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Discovery ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Stops the discovery for the given ID and removes it\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the discovery specified by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Discovery ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets discovery by ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"attributeInfo\": {\n      \n    },\n    \"cdpLevel\": 0,\n    \"deviceIds\": \"string\",\n    \"discoveryCondition\": \"string\",\n    \"discoveryStatus\": \"string\",\n    \"discoveryType\": \"string\",\n    \"enablePasswordList\": \"string\",\n    \"globalCredentialIdList\": [\n      \"string\"\n    ],\n    \"httpReadCredential\": {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"password\": \"string\",\n      \"port\": 0,\n      \"secure\": false,\n      \"username\": \"string\"\n    },\n    \"httpWriteCredential\": {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"password\": \"string\",\n      \"port\": 0,\n      \"secure\": false,\n      \"username\": \"string\"\n    },\n    \"id\": \"string\",\n    \"ipAddressList\": \"string\",\n    \"ipFilterList\": \"string\",\n    \"isAutoCdp\": false,\n    \"lldpLevel\": 0,\n    \"name\": \"string\",\n    \"netconfPort\": \"string\",\n    \"numDevices\": 0,\n    \"parentDiscoveryId\": \"string\",\n    \"passwordList\": \"string\",\n    \"preferredMgmtIPMethod\": \"string\",\n    \"protocolOrder\": \"string\",\n    \"retryCount\": 0,\n    \"snmpAuthPassphrase\": \"string\",\n    \"snmpAuthProtocol\": \"string\",\n    \"snmpMode\": \"string\",\n    \"snmpPrivPassphrase\": \"string\",\n    \"snmpPrivProtocol\": \"string\",\n    \"snmpRoCommunity\": \"string\",\n    \"snmpRoCommunityDesc\": \"string\",\n    \"snmpRwCommunity\": \"string\",\n    \"snmpRwCommunityDesc\": \"string\",\n    \"snmpUserName\": \"string\",\n    \"timeOut\": 0,\n    \"updateMgmtIp\": false,\n    \"userNameList\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve autoComplete values from a discovery based on id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/autoComplete",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "autoComplete"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) taskId"
                    },
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(string, optional) ipAddress"
                    },
                    {
                      "key": "pingStatus",
                      "value": "",
                      "description": "(string, optional) pingStatus"
                    },
                    {
                      "key": "snmpStatus",
                      "value": "",
                      "description": "(string, optional) snmpStatus"
                    },
                    {
                      "key": "cliStatus",
                      "value": "",
                      "description": "(string, optional) cliStatus"
                    },
                    {
                      "key": "netconfStatus",
                      "value": "",
                      "description": "(string, optional) netconfStatus"
                    },
                    {
                      "key": "httpStatus",
                      "value": "",
                      "description": "(string, optional) httpStatus"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the autoComplete values from a discovery job\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves list of discovery jobs for the specified discovery id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/job",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "job"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Discovery ID"
                    }
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, optional) offset"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, optional) limit"
                    },
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(string, optional) ipAddress"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of discovery jobs for the given id. The result can optionally be filtered based on IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cliStatus\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"endTime\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"ipAddress\": \"string\",\n      \"jobStatus\": \"string\",\n      \"name\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"pingStatus\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"startTime\": \"string\",\n      \"taskId\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the network devices discovered in the discovery specified by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/network-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "network-device"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) taskId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network devices discovered for the given discovery\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"anchorWlcForAp\": \"string\",\n      \"authModelId\": \"string\",\n      \"avgUpdateFrequency\": 0,\n      \"bootDateTime\": \"string\",\n      \"cliStatus\": \"string\",\n      \"duplicateDeviceId\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"imageName\": \"string\",\n      \"ingressQueueConfig\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"numUpdates\": 0,\n      \"pingStatus\": \"string\",\n      \"platformId\": \"string\",\n      \"portRange\": \"string\",\n      \"qosStatus\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tag\": \"string\",\n      \"tagCount\": 0,\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"vendor\": \"string\",\n      \"wlcApDeviceStatus\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the range of network devices discovered for the given discovery",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/network-device/:startIndex/:recordsToReturn",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "network-device",
                    ":startIndex",
                    ":recordsToReturn"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Discovery ID"
                    },
                    {
                      "key": "startIndex",
                      "value": "",
                      "description": "(integer, required) Start index"
                    },
                    {
                      "key": "recordsToReturn",
                      "value": "",
                      "description": "(integer, required) Number of records to return"
                    }
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) taskId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network devices discovered for the given discovery and for the given range. The maximum number of records that could be retrieved is 500\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"anchorWlcForAp\": \"string\",\n      \"authModelId\": \"string\",\n      \"avgUpdateFrequency\": 0,\n      \"bootDateTime\": \"string\",\n      \"cliStatus\": \"string\",\n      \"duplicateDeviceId\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"imageName\": \"string\",\n      \"ingressQueueConfig\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"numUpdates\": 0,\n      \"pingStatus\": \"string\",\n      \"platformId\": \"string\",\n      \"portRange\": \"string\",\n      \"qosStatus\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tag\": \"string\",\n      \"tagCount\": 0,\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"vendor\": \"string\",\n      \"wlcApDeviceStatus\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the number of network devices discovered in the discovery specified by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/network-device/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "network-device",
                    "count"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Discovery ID"
                    }
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) taskId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the count of network devices discovered in the given discovery\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve network devices from a discovery on given filters",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:id/summary",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":id",
                    "summary"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) taskId"
                    },
                    {
                      "key": "sortBy",
                      "value": "",
                      "description": "(string, optional) sortBy"
                    },
                    {
                      "key": "sortOrder",
                      "value": "",
                      "description": "(string, optional) sortOrder"
                    },
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(array, optional) ipAddress"
                    },
                    {
                      "key": "pingStatus",
                      "value": "",
                      "description": "(array, optional) pingStatus"
                    },
                    {
                      "key": "snmpStatus",
                      "value": "",
                      "description": "(array, optional) snmpStatus"
                    },
                    {
                      "key": "cliStatus",
                      "value": "",
                      "description": "(array, optional) cliStatus"
                    },
                    {
                      "key": "netconfStatus",
                      "value": "",
                      "description": "(array, optional) netconfStatus"
                    },
                    {
                      "key": "httpStatus",
                      "value": "",
                      "description": "(array, optional) httpStatus"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the network devices from a discovery job based on given filters\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deletes the discovery in the given range",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:startIndex/:recordsToDelete",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":startIndex",
                    ":recordsToDelete"
                  ],
                  "variable": [
                    {
                      "key": "startIndex",
                      "value": "",
                      "description": "(integer, required) Start index"
                    },
                    {
                      "key": "recordsToDelete",
                      "value": "",
                      "description": "(integer, required) Number of records to delete"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Stops discovery for the given range and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the discovery in the given range",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/:startIndex/:recordsToReturn",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    ":startIndex",
                    ":recordsToReturn"
                  ],
                  "variable": [
                    {
                      "key": "startIndex",
                      "value": "",
                      "description": "(integer, required) Start index"
                    },
                    {
                      "key": "recordsToReturn",
                      "value": "",
                      "description": "(integer, required) Number of records to return"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the discovery for the range specified\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cdpLevel\": 0,\n      \"deviceIds\": \"string\",\n      \"discoveryCondition\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"discoveryType\": \"string\",\n      \"enablePasswordList\": \"string\",\n      \"globalCredentialIdList\": [\n        \"string\"\n      ],\n      \"httpReadCredential\": {\n        \"comments\": \"string\",\n        \"credentialType\": \"string\",\n        \"description\": \"string\",\n        \"id\": \"string\",\n        \"instanceTenantId\": \"string\",\n        \"instanceUuid\": \"string\",\n        \"password\": \"string\",\n        \"port\": 0,\n        \"secure\": false,\n        \"username\": \"string\"\n      },\n      \"httpWriteCredential\": {\n        \"comments\": \"string\",\n        \"credentialType\": \"string\",\n        \"description\": \"string\",\n        \"id\": \"string\",\n        \"instanceTenantId\": \"string\",\n        \"instanceUuid\": \"string\",\n        \"password\": \"string\",\n        \"port\": 0,\n        \"secure\": false,\n        \"username\": \"string\"\n      },\n      \"id\": \"string\",\n      \"ipAddressList\": \"string\",\n      \"ipFilterList\": \"string\",\n      \"isAutoCdp\": false,\n      \"lldpLevel\": 0,\n      \"name\": \"string\",\n      \"netconfPort\": \"string\",\n      \"numDevices\": 0,\n      \"parentDiscoveryId\": \"string\",\n      \"passwordList\": \"string\",\n      \"preferredMgmtIPMethod\": \"string\",\n      \"protocolOrder\": \"string\",\n      \"retryCount\": 0,\n      \"snmpAuthPassphrase\": \"string\",\n      \"snmpAuthProtocol\": \"string\",\n      \"snmpMode\": \"string\",\n      \"snmpPrivPassphrase\": \"string\",\n      \"snmpPrivProtocol\": \"string\",\n      \"snmpRoCommunity\": \"string\",\n      \"snmpRoCommunityDesc\": \"string\",\n      \"snmpRwCommunity\": \"string\",\n      \"snmpRwCommunityDesc\": \"string\",\n      \"snmpUserName\": \"string\",\n      \"timeOut\": 0,\n      \"updateMgmtIp\": false,\n      \"userNameList\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the number of discoveries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    "count"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the count of all available discovery jobs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves the list of discovery jobs for the given IP",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/discovery/job",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "discovery",
                    "job"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, optional) offset"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, optional) limit"
                    },
                    {
                      "key": "ipAddress",
                      "value": "",
                      "description": "(string, required) ipAddress"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, optional) name"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the list of discovery jobs for the given IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cliStatus\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"endTime\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"ipAddress\": \"string\",\n      \"jobStatus\": \"string\",\n      \"name\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"pingStatus\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"startTime\": \"string\",\n      \"taskId\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves global credential for the given credential sub type",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "credentialSubType",
                      "value": "",
                      "description": "(string, optional) Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF"
                    },
                    {
                      "key": "sortBy",
                      "value": "",
                      "description": "(string, optional) sortBy"
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "(string, optional) order"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to get global credential for the given credential sub type\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves global credential by ID",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/:globalCredentialId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    ":globalCredentialId"
                  ],
                  "variable": [
                    {
                      "key": "globalCredentialId",
                      "value": "",
                      "description": "(string, required) ID of global-credential"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to delete global credential for the given ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Update global credential for network devices in site(s)",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/:globalCredentialId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    ":globalCredentialId"
                  ],
                  "variable": [
                    {
                      "key": "globalCredentialId",
                      "value": "",
                      "description": "(string, required) Global credential Uuid"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"siteUuids\": [\n    \"string\"\n  ]\n}"
                },
                "description": "Update global credential for network devices in site(s)\n\n###### Request Model\n- root: (map, optional)\n  - siteUuids: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves credential sub type for the given credential Id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) Global Credential ID"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to get credential sub type for the given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": \"string\",\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global CLI credential",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/cli",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "cli"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"enablePassword\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"username\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global CLI credential\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global CLI credential",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/cli",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "cli"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"enablePassword\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"username\": \"string\"\n}"
                },
                "description": "This method is used to update global CLI credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global HTTP read credentials",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/http-read",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "http-read"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add HTTP read credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global HTTP Read credential",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/http-read",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "http-read"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
                },
                "description": "This method is used to update global HTTP Read credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global HTTP write credentials",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/http-write",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "http-write"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global HTTP write credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global HTTP Write credential",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/http-write",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "http-write"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
                },
                "description": "This method is used to update global HTTP Write credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global netconf credential",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/netconf",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "netconf"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"netconfPort\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global netconf credential\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global netconf credential",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/netconf",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "netconf"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"netconfPort\": \"string\"\n}"
                },
                "description": "This method is used to update global netconf credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global SNMP read community",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv2-read-community",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv2-read-community"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"readCommunity\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global SNMP read community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global SNMP read community",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv2-read-community",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv2-read-community"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"readCommunity\": \"string\"\n}"
                },
                "description": "This method is used to update global SNMP read community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global SNMP write community",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv2-write-community",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv2-write-community"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"writeCommunity\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global SNMP write community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global SNMP write community",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv2-write-community",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv2-write-community"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"writeCommunity\": \"string\"\n}"
                },
                "description": "This method is used to update global SNMP write community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates global SNMPv3 credential",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv3",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv3"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"authPassword\": \"string\",\n    \"authType\": \"string\",\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"privacyPassword\": \"string\",\n    \"privacyType\": \"string\",\n    \"snmpMode\": \"string\",\n    \"username\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add global SNMPv3 credential\n\n###### Request Model\n- root: (array[map], optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Updates global SNMPv3 credential",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/global-credential/snmpv3",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "global-credential",
                    "snmpv3"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"authPassword\": \"string\",\n  \"authType\": \"string\",\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"privacyPassword\": \"string\",\n  \"privacyType\": \"string\",\n  \"snmpMode\": \"string\",\n  \"username\": \"string\"\n}"
                },
                "description": "This method is used to update global SNMPv3 credential\n\n###### Request Model\n- root: (map, optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves SNMP properties",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/snmp-property",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "snmp-property"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This method is used to get SNMP properties\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - intValue: (integer, optional)\n    - systemPropertyName: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"intValue\": 0,\n      \"systemPropertyName\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Creates or updates SNMP properties",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/snmp-property",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "snmp-property"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"intValue\": 0,\n    \"systemPropertyName\": \"string\"\n  }\n]"
                },
                "description": "This method is used to add SNMP properties\n\n###### Request Model\n- root: (array[map], optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - intValue: (integer, optional)\n  - systemPropertyName: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Path Trace",
          "item": [
            {
              "name": "Retrieves a summary of all flow analyses stored",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/flow-analysis",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "flow-analysis"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "periodicRefresh",
                      "value": "",
                      "description": "(boolean, optional) Is analysis periodically refreshed?"
                    },
                    {
                      "key": "sourceIP",
                      "value": "",
                      "description": "(string, optional) Source IP address"
                    },
                    {
                      "key": "destIP",
                      "value": "",
                      "description": "(string, optional) Destination IP adress"
                    },
                    {
                      "key": "sourcePort",
                      "value": "",
                      "description": "(string, optional) Source port"
                    },
                    {
                      "key": "destPort",
                      "value": "",
                      "description": "(string, optional) Destination port"
                    },
                    {
                      "key": "gtCreateTime",
                      "value": "",
                      "description": "(string, optional) Analyses requested after this time"
                    },
                    {
                      "key": "ltCreateTime",
                      "value": "",
                      "description": "(string, optional) Analyses requested before this time"
                    },
                    {
                      "key": "protocol",
                      "value": "",
                      "description": "(string, optional) Protocol"
                    },
                    {
                      "key": "status",
                      "value": "",
                      "description": "(string, optional) Status"
                    },
                    {
                      "key": "taskId",
                      "value": "",
                      "description": "(string, optional) Task ID"
                    },
                    {
                      "key": "lastUpdateTime",
                      "value": "",
                      "description": "(string, optional) Last update time"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(string, optional) Number of resources returned"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(string, optional) Start index of resources returned (1-based)"
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "(string, optional) Order by this field"
                    },
                    {
                      "key": "sortBy",
                      "value": "",
                      "description": "(string, optional) Sort by this field"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieves a summary of all flow analyses stored. Filters the results by given parameters.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - controlPath: (boolean, optional)\n    - createTime: (integer, required)\n    - destIP: (string, required)\n    - destPort: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - inclusions: (array[string], optional)\n    - lastUpdateTime: (integer, required)\n    - periodicRefresh: (boolean, optional)\n    - protocol: (string, optional)\n    - sourceIP: (string, required)\n    - sourcePort: (string, optional)\n    - status: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"controlPath\": false,\n      \"createTime\": 0,\n      \"destIP\": \"string\",\n      \"destPort\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"inclusions\": [\n        \"string\"\n      ],\n      \"lastUpdateTime\": 0,\n      \"periodicRefresh\": false,\n      \"protocol\": \"string\",\n      \"sourceIP\": \"string\",\n      \"sourcePort\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Initiates a new flow analysis",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/flow-analysis",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "flow-analysis"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"controlPath\": false,\n  \"destIP\": \"string\",\n  \"destPort\": \"string\",\n  \"inclusions\": [\n    \"string\"\n  ],\n  \"periodicRefresh\": false,\n  \"protocol\": \"string\",\n  \"sourceIP\": \"string\",\n  \"sourcePort\": \"string\"\n}"
                },
                "description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.\n\n###### Request Model\n- root: (map, optional)\n  - controlPath: (boolean, optional)\n  - destIP: (string, required)\n  - destPort: (string, optional)\n  - inclusions: (array[string], optional)\n  - periodicRefresh: (boolean, optional)\n  - protocol: (string, optional)\n  - sourceIP: (string, required)\n  - sourcePort: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - flowAnalysisId: (string, optional)\n    - taskId: (string, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"flowAnalysisId\": \"string\",\n    \"taskId\": \"string\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deletes a flow analysis request",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/flow-analysis/:flowAnalysisId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "flow-analysis",
                    ":flowAnalysisId"
                  ],
                  "variable": [
                    {
                      "key": "flowAnalysisId",
                      "value": "",
                      "description": "(string, required) Flow analysis request id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Deletes a flow analysis request by its id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Retrieves result of a previously requested flow analysis",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/flow-analysis/:flowAnalysisId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "flow-analysis",
                    ":flowAnalysisId"
                  ],
                  "variable": [
                    {
                      "key": "flowAnalysisId",
                      "value": "",
                      "description": "(string, required) Flow analysis request id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieves result of a previously requested flow analysis by its Flow Analysis id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detailedStatus: (map, required)\n      - aclTraceCalculation: (string, optional)\n      - aclTraceCalculationFailureReason: (string, optional)\n    - lastUpdate: (string, optional)\n    - networkElements: (array[map], optional)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, optional)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - egressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ingressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonStatistics: (array[map], optional)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - networkElementsInfo: (array[map], required)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, required)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonitorStatistics: (array[map], required)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - properties: (array[string], required)\n    - request: (map, required)\n      - controlPath: (boolean, optional)\n      - createTime: (integer, required)\n      - destIP: (string, required)\n      - destPort: (string, optional)\n      - failureReason: (string, optional)\n      - id: (string, optional)\n      - inclusions: (array[string], optional)\n      - lastUpdateTime: (integer, required)\n      - periodicRefresh: (boolean, optional)\n      - protocol: (string, optional)\n      - sourceIP: (string, required)\n      - sourcePort: (string, optional)\n      - status: (string, required)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"detailedStatus\": {\n      \"aclTraceCalculation\": \"string\",\n      \"aclTraceCalculationFailureReason\": \"string\"\n    },\n    \"lastUpdate\": \"string\",\n    \"networkElements\": [\n      {\n        \"accuracyList\": [\n          {\n            \"percent\": 0,\n            \"reason\": \"string\"\n          }\n        ],\n        \"detailedStatus\": {\n          \"aclTraceCalculation\": \"string\",\n          \"aclTraceCalculationFailureReason\": \"string\"\n        },\n        \"deviceStatistics\": {\n          \"cpuStatistics\": {\n            \"fiveMinUsageInPercentage\": 0,\n            \"fiveSecsUsageInPercentage\": 0,\n            \"oneMinUsageInPercentage\": 0,\n            \"refreshedAt\": 0\n          },\n          \"memoryStatistics\": {\n            \"memoryUsage\": 0,\n            \"refreshedAt\": 0,\n            \"totalMemory\": 0\n          }\n        },\n        \"deviceStatsCollection\": \"string\",\n        \"deviceStatsCollectionFailureReason\": \"string\",\n        \"egressPhysicalInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"egressVirtualInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"flexConnect\": {\n          \"authentication\": \"string\",\n          \"dataSwitching\": \"string\",\n          \"egressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"ingressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"wirelessLanControllerId\": \"string\",\n          \"wirelessLanControllerName\": \"string\"\n        },\n        \"id\": \"string\",\n        \"ingressPhysicalInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"ingressVirtualInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"ip\": \"string\",\n        \"linkInformationSource\": \"string\",\n        \"name\": \"string\",\n        \"perfMonCollection\": \"string\",\n        \"perfMonCollectionFailureReason\": \"string\",\n        \"perfMonStatistics\": [\n          {\n            \"byteRate\": 0,\n            \"destIpAddress\": \"string\",\n            \"destPort\": \"string\",\n            \"inputInterface\": \"string\",\n            \"ipv4DSCP\": \"string\",\n            \"ipv4TTL\": 0,\n            \"outputInterface\": \"string\",\n            \"packetBytes\": 0,\n            \"packetCount\": 0,\n            \"packetLoss\": 0,\n            \"packetLossPercentage\": 0,\n            \"protocol\": \"string\",\n            \"refreshedAt\": 0,\n            \"rtpJitterMax\": 0,\n            \"rtpJitterMean\": 0,\n            \"rtpJitterMin\": 0,\n            \"sourceIpAddress\": \"string\",\n            \"sourcePort\": \"string\"\n          }\n        ],\n        \"role\": \"string\",\n        \"ssid\": \"string\",\n        \"tunnels\": [\n          \"string\"\n        ],\n        \"type\": \"string\",\n        \"wlanId\": \"string\"\n      }\n    ],\n    \"networkElementsInfo\": [\n      {\n        \"accuracyList\": [\n          {\n            \"percent\": 0,\n            \"reason\": \"string\"\n          }\n        ],\n        \"detailedStatus\": {\n          \"aclTraceCalculation\": \"string\",\n          \"aclTraceCalculationFailureReason\": \"string\"\n        },\n        \"deviceStatistics\": {\n          \"cpuStatistics\": {\n            \"fiveMinUsageInPercentage\": 0,\n            \"fiveSecsUsageInPercentage\": 0,\n            \"oneMinUsageInPercentage\": 0,\n            \"refreshedAt\": 0\n          },\n          \"memoryStatistics\": {\n            \"memoryUsage\": 0,\n            \"refreshedAt\": 0,\n            \"totalMemory\": 0\n          }\n        },\n        \"deviceStatsCollection\": \"string\",\n        \"deviceStatsCollectionFailureReason\": \"string\",\n        \"egressInterface\": {\n          \"physicalInterface\": {\n            \"aclAnalysis\": {\n              \"aclName\": \"string\",\n              \"matchingAces\": [\n                {\n                  \"ace\": \"string\",\n                  \"matchingPorts\": [\n                    {\n                      \"ports\": [\n                        {\n                          \"destPorts\": [\n                            \"string\"\n                          ],\n                          \"sourcePorts\": [\n                            \"string\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"string\"\n                    }\n                  ],\n                  \"result\": \"string\"\n                }\n              ],\n              \"result\": \"string\"\n            },\n            \"id\": \"string\",\n            \"interfaceStatistics\": {\n              \"adminStatus\": \"string\",\n              \"inputPackets\": 0,\n              \"inputQueueCount\": 0,\n              \"inputQueueDrops\": 0,\n              \"inputQueueFlushes\": 0,\n              \"inputQueueMaxDepth\": 0,\n              \"inputRatebps\": 0,\n              \"operationalStatus\": \"string\",\n              \"outputDrop\": 0,\n              \"outputPackets\": 0,\n              \"outputQueueCount\": 0,\n              \"outputQueueDepth\": 0,\n              \"outputRatebps\": 0,\n              \"refreshedAt\": 0\n            },\n            \"interfaceStatsCollection\": \"string\",\n            \"interfaceStatsCollectionFailureReason\": \"string\",\n            \"name\": \"string\",\n            \"pathOverlayInfo\": [\n              {\n                \"controlPlane\": \"string\",\n                \"dataPacketEncapsulation\": \"string\",\n                \"destIp\": \"string\",\n                \"destPort\": \"string\",\n                \"protocol\": \"string\",\n                \"sourceIp\": \"string\",\n                \"sourcePort\": \"string\",\n                \"vxlanInfo\": {\n                  \"dscp\": \"string\",\n                  \"vnid\": \"string\"\n                }\n              }\n            ],\n            \"qosStatistics\": [\n              {\n                \"classMapName\": \"string\",\n                \"dropRate\": 0,\n                \"numBytes\": 0,\n                \"numPackets\": 0,\n                \"offeredRate\": 0,\n                \"queueBandwidthbps\": \"string\",\n                \"queueDepth\": 0,\n                \"queueNoBufferDrops\": 0,\n                \"queueTotalDrops\": 0,\n                \"refreshedAt\": 0\n              }\n            ],\n            \"qosStatsCollection\": \"string\",\n            \"qosStatsCollectionFailureReason\": \"string\",\n            \"usedVlan\": \"string\",\n            \"vrfName\": \"string\"\n          },\n          \"virtualInterface\": [\n            {\n              \"aclAnalysis\": {\n                \"aclName\": \"string\",\n                \"matchingAces\": [\n                  {\n                    \"ace\": \"string\",\n                    \"matchingPorts\": [\n                      {\n                        \"ports\": [\n                          {\n                            \"destPorts\": [\n                              \"string\"\n                            ],\n                            \"sourcePorts\": [\n                              \"string\"\n                            ]\n                          }\n                        ],\n                        \"protocol\": \"string\"\n                      }\n                    ],\n                    \"result\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              },\n              \"id\": \"string\",\n              \"interfaceStatistics\": {\n                \"adminStatus\": \"string\",\n                \"inputPackets\": 0,\n                \"inputQueueCount\": 0,\n                \"inputQueueDrops\": 0,\n                \"inputQueueFlushes\": 0,\n                \"inputQueueMaxDepth\": 0,\n                \"inputRatebps\": 0,\n                \"operationalStatus\": \"string\",\n                \"outputDrop\": 0,\n                \"outputPackets\": 0,\n                \"outputQueueCount\": 0,\n                \"outputQueueDepth\": 0,\n                \"outputRatebps\": 0,\n                \"refreshedAt\": 0\n              },\n              \"interfaceStatsCollection\": \"string\",\n              \"interfaceStatsCollectionFailureReason\": \"string\",\n              \"name\": \"string\",\n              \"pathOverlayInfo\": [\n                {\n                  \"controlPlane\": \"string\",\n                  \"dataPacketEncapsulation\": \"string\",\n                  \"destIp\": \"string\",\n                  \"destPort\": \"string\",\n                  \"protocol\": \"string\",\n                  \"sourceIp\": \"string\",\n                  \"sourcePort\": \"string\",\n                  \"vxlanInfo\": {\n                    \"dscp\": \"string\",\n                    \"vnid\": \"string\"\n                  }\n                }\n              ],\n              \"qosStatistics\": [\n                {\n                  \"classMapName\": \"string\",\n                  \"dropRate\": 0,\n                  \"numBytes\": 0,\n                  \"numPackets\": 0,\n                  \"offeredRate\": 0,\n                  \"queueBandwidthbps\": \"string\",\n                  \"queueDepth\": 0,\n                  \"queueNoBufferDrops\": 0,\n                  \"queueTotalDrops\": 0,\n                  \"refreshedAt\": 0\n                }\n              ],\n              \"qosStatsCollection\": \"string\",\n              \"qosStatsCollectionFailureReason\": \"string\",\n              \"usedVlan\": \"string\",\n              \"vrfName\": \"string\"\n            }\n          ]\n        },\n        \"flexConnect\": {\n          \"authentication\": \"string\",\n          \"dataSwitching\": \"string\",\n          \"egressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"ingressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"wirelessLanControllerId\": \"string\",\n          \"wirelessLanControllerName\": \"string\"\n        },\n        \"id\": \"string\",\n        \"ingressInterface\": {\n          \"physicalInterface\": {\n            \"aclAnalysis\": {\n              \"aclName\": \"string\",\n              \"matchingAces\": [\n                {\n                  \"ace\": \"string\",\n                  \"matchingPorts\": [\n                    {\n                      \"ports\": [\n                        {\n                          \"destPorts\": [\n                            \"string\"\n                          ],\n                          \"sourcePorts\": [\n                            \"string\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"string\"\n                    }\n                  ],\n                  \"result\": \"string\"\n                }\n              ],\n              \"result\": \"string\"\n            },\n            \"id\": \"string\",\n            \"interfaceStatistics\": {\n              \"adminStatus\": \"string\",\n              \"inputPackets\": 0,\n              \"inputQueueCount\": 0,\n              \"inputQueueDrops\": 0,\n              \"inputQueueFlushes\": 0,\n              \"inputQueueMaxDepth\": 0,\n              \"inputRatebps\": 0,\n              \"operationalStatus\": \"string\",\n              \"outputDrop\": 0,\n              \"outputPackets\": 0,\n              \"outputQueueCount\": 0,\n              \"outputQueueDepth\": 0,\n              \"outputRatebps\": 0,\n              \"refreshedAt\": 0\n            },\n            \"interfaceStatsCollection\": \"string\",\n            \"interfaceStatsCollectionFailureReason\": \"string\",\n            \"name\": \"string\",\n            \"pathOverlayInfo\": [\n              {\n                \"controlPlane\": \"string\",\n                \"dataPacketEncapsulation\": \"string\",\n                \"destIp\": \"string\",\n                \"destPort\": \"string\",\n                \"protocol\": \"string\",\n                \"sourceIp\": \"string\",\n                \"sourcePort\": \"string\",\n                \"vxlanInfo\": {\n                  \"dscp\": \"string\",\n                  \"vnid\": \"string\"\n                }\n              }\n            ],\n            \"qosStatistics\": [\n              {\n                \"classMapName\": \"string\",\n                \"dropRate\": 0,\n                \"numBytes\": 0,\n                \"numPackets\": 0,\n                \"offeredRate\": 0,\n                \"queueBandwidthbps\": \"string\",\n                \"queueDepth\": 0,\n                \"queueNoBufferDrops\": 0,\n                \"queueTotalDrops\": 0,\n                \"refreshedAt\": 0\n              }\n            ],\n            \"qosStatsCollection\": \"string\",\n            \"qosStatsCollectionFailureReason\": \"string\",\n            \"usedVlan\": \"string\",\n            \"vrfName\": \"string\"\n          },\n          \"virtualInterface\": [\n            {\n              \"aclAnalysis\": {\n                \"aclName\": \"string\",\n                \"matchingAces\": [\n                  {\n                    \"ace\": \"string\",\n                    \"matchingPorts\": [\n                      {\n                        \"ports\": [\n                          {\n                            \"destPorts\": [\n                              \"string\"\n                            ],\n                            \"sourcePorts\": [\n                              \"string\"\n                            ]\n                          }\n                        ],\n                        \"protocol\": \"string\"\n                      }\n                    ],\n                    \"result\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              },\n              \"id\": \"string\",\n              \"interfaceStatistics\": {\n                \"adminStatus\": \"string\",\n                \"inputPackets\": 0,\n                \"inputQueueCount\": 0,\n                \"inputQueueDrops\": 0,\n                \"inputQueueFlushes\": 0,\n                \"inputQueueMaxDepth\": 0,\n                \"inputRatebps\": 0,\n                \"operationalStatus\": \"string\",\n                \"outputDrop\": 0,\n                \"outputPackets\": 0,\n                \"outputQueueCount\": 0,\n                \"outputQueueDepth\": 0,\n                \"outputRatebps\": 0,\n                \"refreshedAt\": 0\n              },\n              \"interfaceStatsCollection\": \"string\",\n              \"interfaceStatsCollectionFailureReason\": \"string\",\n              \"name\": \"string\",\n              \"pathOverlayInfo\": [\n                {\n                  \"controlPlane\": \"string\",\n                  \"dataPacketEncapsulation\": \"string\",\n                  \"destIp\": \"string\",\n                  \"destPort\": \"string\",\n                  \"protocol\": \"string\",\n                  \"sourceIp\": \"string\",\n                  \"sourcePort\": \"string\",\n                  \"vxlanInfo\": {\n                    \"dscp\": \"string\",\n                    \"vnid\": \"string\"\n                  }\n                }\n              ],\n              \"qosStatistics\": [\n                {\n                  \"classMapName\": \"string\",\n                  \"dropRate\": 0,\n                  \"numBytes\": 0,\n                  \"numPackets\": 0,\n                  \"offeredRate\": 0,\n                  \"queueBandwidthbps\": \"string\",\n                  \"queueDepth\": 0,\n                  \"queueNoBufferDrops\": 0,\n                  \"queueTotalDrops\": 0,\n                  \"refreshedAt\": 0\n                }\n              ],\n              \"qosStatsCollection\": \"string\",\n              \"qosStatsCollectionFailureReason\": \"string\",\n              \"usedVlan\": \"string\",\n              \"vrfName\": \"string\"\n            }\n          ]\n        },\n        \"ip\": \"string\",\n        \"linkInformationSource\": \"string\",\n        \"name\": \"string\",\n        \"perfMonCollection\": \"string\",\n        \"perfMonCollectionFailureReason\": \"string\",\n        \"perfMonitorStatistics\": [\n          {\n            \"byteRate\": 0,\n            \"destIpAddress\": \"string\",\n            \"destPort\": \"string\",\n            \"inputInterface\": \"string\",\n            \"ipv4DSCP\": \"string\",\n            \"ipv4TTL\": 0,\n            \"outputInterface\": \"string\",\n            \"packetBytes\": 0,\n            \"packetCount\": 0,\n            \"packetLoss\": 0,\n            \"packetLossPercentage\": 0,\n            \"protocol\": \"string\",\n            \"refreshedAt\": 0,\n            \"rtpJitterMax\": 0,\n            \"rtpJitterMean\": 0,\n            \"rtpJitterMin\": 0,\n            \"sourceIpAddress\": \"string\",\n            \"sourcePort\": \"string\"\n          }\n        ],\n        \"role\": \"string\",\n        \"ssid\": \"string\",\n        \"tunnels\": [\n          \"string\"\n        ],\n        \"type\": \"string\",\n        \"wlanId\": \"string\"\n      }\n    ],\n    \"properties\": [\n      \"string\"\n    ],\n    \"request\": {\n      \"controlPath\": false,\n      \"createTime\": 0,\n      \"destIP\": \"string\",\n      \"destPort\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"inclusions\": [\n        \"string\"\n      ],\n      \"lastUpdateTime\": 0,\n      \"periodicRefresh\": false,\n      \"protocol\": \"string\",\n      \"sourceIP\": \"string\",\n      \"sourcePort\": \"string\",\n      \"status\": \"string\"\n    }\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Template Programmer",
          "item": [
            {
              "name": "Gets a list of projects",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/project",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "project"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, optional) Name of project to be searched"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "List the projects\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Create Project",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/project",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "project"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
                },
                "description": "This API is used to create a new project.\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Update Project",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/project",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "project"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
                },
                "description": "This API is used to update an existing project.\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deletes the project",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/project/:projectId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "project",
                    ":projectId"
                  ],
                  "variable": [
                    {
                      "key": "projectId",
                      "value": "",
                      "description": "(string, required) projectId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Deletes the project\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Create Template",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/project/:projectId/template",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "project",
                    ":projectId",
                    "template"
                  ],
                  "variable": [
                    {
                      "key": "projectId",
                      "value": "",
                      "description": "(string, required) projectId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"author\": \"string\",\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                },
                "description": "API to create a template.\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gets the templates available depending on the criteria",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "projectId",
                      "value": "",
                      "description": "(string, optional) projectId"
                    },
                    {
                      "key": "softwareType",
                      "value": "",
                      "description": "(string, optional) softwareType"
                    },
                    {
                      "key": "softwareVersion",
                      "value": "",
                      "description": "(string, optional) softwareVersion"
                    },
                    {
                      "key": "productFamily",
                      "value": "",
                      "description": "(string, optional) productFamily"
                    },
                    {
                      "key": "productSeries",
                      "value": "",
                      "description": "(string, optional) productSeries"
                    },
                    {
                      "key": "productType",
                      "value": "",
                      "description": "(string, optional) productType"
                    },
                    {
                      "key": "includeHead",
                      "value": "",
                      "description": "(boolean, optional) includeHead"
                    },
                    {
                      "key": "filterConflictingTemplates",
                      "value": "",
                      "description": "(boolean, optional) filterConflictingTemplates"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Gets the templates available depending on the criteria\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Update Template",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"author\": \"string\",\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                },
                "description": "API to update a template.\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deletes the template",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/:templateId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    ":templateId"
                  ],
                  "variable": [
                    {
                      "key": "templateId",
                      "value": "",
                      "description": "(string, required) templateId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Deletes the template\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gets details of a given template",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/:templateId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    ":templateId"
                  ],
                  "variable": [
                    {
                      "key": "templateId",
                      "value": "",
                      "description": "(string, required) templateId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Details of the template\n\n###### Response Model\n- root: (map, optional)\n  - author: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - order: (integer, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (any, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"author\": \"string\",\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"order\": 0,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": \"any\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Deploy Template",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/deploy",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    "deploy"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"targetInfo\": [\n    {\n      \"hostName\": \"string\",\n      \"id\": \"string\",\n      \"params\": {\n        \n      },\n      \"type\": \"string\"\n    }\n  ],\n  \"templateId\": \"string\"\n}"
                },
                "description": "API to deploy a template.\n\n###### Request Model\n- root: (map, optional)\n  - targetInfo: (array[map], optional)\n    - hostName: (string, optional)\n    - id: (string, optional)\n    - params: (map, optional)\n    - type: (enum[\"MANAGED_DEVICE_IP\",\"MANAGED_DEVICE_UUID\",\"PRE_PROVISIONED_SERIAL\",\"PRE_PROVISIONED_MAC\",\"DEFAULT\",\"MANAGED_DEVICE_HOSTNAME\"], optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"deploymentId\": \"string\",\n  \"deploymentName\": \"string\",\n  \"devices\": [\n    {\n      \"deviceId\": \"string\",\n      \"duration\": \"string\",\n      \"endTime\": \"string\",\n      \"ipAddress\": \"string\",\n      \"name\": \"string\",\n      \"startTime\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"duration\": \"string\",\n  \"endTime\": \"string\",\n  \"projectName\": \"string\",\n  \"startTime\": \"string\",\n  \"status\": \"string\",\n  \"templateName\": \"string\",\n  \"templateVersion\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Status of template deployment",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/deploy/status/:deploymentId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    "deploy",
                    "status",
                    ":deploymentId"
                  ],
                  "variable": [
                    {
                      "key": "deploymentId",
                      "value": "",
                      "description": "(string, required) deploymentId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "API to retrieve the status of template deployment.\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"deploymentId\": \"string\",\n  \"deploymentName\": \"string\",\n  \"devices\": [\n    {\n      \"deviceId\": \"string\",\n      \"duration\": \"string\",\n      \"endTime\": \"string\",\n      \"ipAddress\": \"string\",\n      \"name\": \"string\",\n      \"startTime\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"duration\": \"string\",\n  \"endTime\": \"string\",\n  \"projectName\": \"string\",\n  \"startTime\": \"string\",\n  \"status\": \"string\",\n  \"templateName\": \"string\",\n  \"templateVersion\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Preview Template",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/preview",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    "preview"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"params\": {\n    \n  },\n  \"templateId\": \"string\"\n}"
                },
                "description": "API to preview a template.\n\n###### Request Model\n- root: (map, optional)\n  - params: (map, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - cliPreview: (string, optional)\n  - templateId: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"cliPreview\": \"string\",\n  \"templateId\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Version Template",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/version",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    "version"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"comments\": \"string\",\n  \"templateId\": \"string\"\n}"
                },
                "description": "API to version the current contents of the template.\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Gets all the versions of a given template",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/template-programmer/template/version/:templateId",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "template-programmer",
                    "template",
                    "version",
                    ":templateId"
                  ],
                  "variable": [
                    {
                      "key": "templateId",
                      "value": "",
                      "description": "(string, required) templateId"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get all the versions of template\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Site Management",
      "item": [
        {
          "name": "PnP",
          "item": [
            {
              "name": "List devices",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, optional) Limits number of results"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, optional) Index of first result"
                    },
                    {
                      "key": "sort",
                      "value": "",
                      "description": "(array, optional) Comma seperated list of fields to sort on"
                    },
                    {
                      "key": "sortOrder",
                      "value": "",
                      "description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
                    },
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(array, optional) Device Serial Number"
                    },
                    {
                      "key": "state",
                      "value": "",
                      "description": "(array, optional) Device State"
                    },
                    {
                      "key": "onbState",
                      "value": "",
                      "description": "(array, optional) Device Onboarding State"
                    },
                    {
                      "key": "cmState",
                      "value": "",
                      "description": "(array, optional) Device Connection Manager State"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(array, optional) Device Name"
                    },
                    {
                      "key": "pid",
                      "value": "",
                      "description": "(array, optional) Device ProductId"
                    },
                    {
                      "key": "source",
                      "value": "",
                      "description": "(array, optional) Device Source"
                    },
                    {
                      "key": "projectId",
                      "value": "",
                      "description": "(array, optional) Device Project Id"
                    },
                    {
                      "key": "workflowId",
                      "value": "",
                      "description": "(array, optional) Device Workflow Id"
                    },
                    {
                      "key": "projectName",
                      "value": "",
                      "description": "(array, optional) Device Project Name"
                    },
                    {
                      "key": "workflowName",
                      "value": "",
                      "description": "(array, optional) Device Workflow Name"
                    },
                    {
                      "key": "smartAccountId",
                      "value": "",
                      "description": "(array, optional) Device Smart Account"
                    },
                    {
                      "key": "virtualAccountId",
                      "value": "",
                      "description": "(array, optional) Device Virtual Account"
                    },
                    {
                      "key": "lastContact",
                      "value": "",
                      "description": "(boolean, optional) Device Has Contacted lastContact > 0"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get the list of devices that match the provided filter. Pagination and sorting are also supported. If a limit is not specified, it will default to return 50 devices.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Create Device",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
                },
                "description": "This API is used to add a Planned device to the PnP database. A Planned device is a device that the customer has bought and/or is planning to manage.\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Delete Device",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to delete the specified device from the database.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Device by ID",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get device details of the device with input device id\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Update Device",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
                },
                "description": "This API is used to update device details of a device that exists in the PnP database.\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Claim Device(s)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/claim",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "claim"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"configFileUrl\": \"string\",\n  \"configId\": \"string\",\n  \"deviceClaimList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"fileServiceId\": \"string\",\n  \"imageId\": \"string\",\n  \"imageUrl\": \"string\",\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
                },
                "description": "This API is used to assign a project & workflow (i.e. claim) one of more devices.\n\n###### Request Model\n- root: (map, optional)\n  - configFileUrl: (string, optional)\n  - configId: (string, optional)\n  - deviceClaimList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - fileServiceId: (string, optional)\n  - imageId: (string, optional)\n  - imageUrl: (string, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Device Count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "count"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(array, optional) Device Serial Number"
                    },
                    {
                      "key": "state",
                      "value": "",
                      "description": "(array, optional) Device State"
                    },
                    {
                      "key": "onbState",
                      "value": "",
                      "description": "(array, optional) Device Onboarding State"
                    },
                    {
                      "key": "cmState",
                      "value": "",
                      "description": "(array, optional) Device Connection Manager State"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(array, optional) Device Name"
                    },
                    {
                      "key": "pid",
                      "value": "",
                      "description": "(array, optional) Device ProductId"
                    },
                    {
                      "key": "source",
                      "value": "",
                      "description": "(array, optional) Device Source"
                    },
                    {
                      "key": "projectId",
                      "value": "",
                      "description": "(array, optional) Device Project Id"
                    },
                    {
                      "key": "workflowId",
                      "value": "",
                      "description": "(array, optional) Device Workflow Id"
                    },
                    {
                      "key": "projectName",
                      "value": "",
                      "description": "(array, optional) Device Project Name"
                    },
                    {
                      "key": "workflowName",
                      "value": "",
                      "description": "(array, optional) Device Workflow Name"
                    },
                    {
                      "key": "smartAccountId",
                      "value": "",
                      "description": "(array, optional) Device Smart Account"
                    },
                    {
                      "key": "virtualAccountId",
                      "value": "",
                      "description": "(array, optional) Device Virtual Account"
                    },
                    {
                      "key": "lastContact",
                      "value": "",
                      "description": "(boolean, optional) Device Has Contacted lastContact > 0"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get the number of the devices matching provided filters. This is useful for pageination.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Categorized Device Count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/dashboard/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "dashboard",
                    "count"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "category",
                      "value": "",
                      "description": "(string, required) Valid Values: state, errorState, onbState or source"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get Categorized Device Count\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Device History",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/history",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "history"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "serialNumber",
                      "value": "",
                      "description": "(string, required) Device Serial Number"
                    },
                    {
                      "key": "sort",
                      "value": "",
                      "description": "(array, optional) Comma seperated list of fields to sort on"
                    },
                    {
                      "key": "sortOrder",
                      "value": "",
                      "description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Retrieves history for a specific device. Serial Number is a required parameter\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Import Many Devices",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/import",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "import"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"_id\": \"string\",\n    \"deviceInfo\": {\n      \"aaaCredentials\": {\n        \"password\": \"string\",\n        \"username\": \"string\"\n      },\n      \"addedOn\": 0,\n      \"addnMacAddrs\": [\n        \"string\"\n      ],\n      \"agentType\": \"string\",\n      \"authStatus\": \"string\",\n      \"authenticatedSudiSerialNo\": \"string\",\n      \"capabilitiesSupported\": [\n        \"string\"\n      ],\n      \"cmState\": \"string\",\n      \"description\": \"string\",\n      \"deviceSudiSerialNos\": [\n        \"string\"\n      ],\n      \"deviceType\": \"string\",\n      \"featuresSupported\": [\n        \"string\"\n      ],\n      \"fileSystemList\": [\n        {\n          \"freespace\": 0,\n          \"name\": \"string\",\n          \"readable\": false,\n          \"size\": 0,\n          \"type\": \"string\",\n          \"writeable\": false\n        }\n      ],\n      \"firstContact\": 0,\n      \"hostname\": \"string\",\n      \"httpHeaders\": [\n        {\n          \"key\": \"string\",\n          \"value\": \"string\"\n        }\n      ],\n      \"imageFile\": \"string\",\n      \"imageVersion\": \"string\",\n      \"ipInterfaces\": [\n        {\n          \"ipv4Address\": \"any\",\n          \"ipv6AddressList\": [\n            \"any\"\n          ],\n          \"macAddress\": \"string\",\n          \"name\": \"string\",\n          \"status\": \"string\"\n        }\n      ],\n      \"lastContact\": 0,\n      \"lastSyncTime\": 0,\n      \"lastUpdateOn\": 0,\n      \"location\": {\n        \"address\": \"string\",\n        \"altitude\": \"string\",\n        \"latitude\": \"string\",\n        \"longitude\": \"string\",\n        \"siteId\": \"string\"\n      },\n      \"macAddress\": \"string\",\n      \"mode\": \"string\",\n      \"name\": \"string\",\n      \"neighborLinks\": [\n        {\n          \"localInterfaceName\": \"string\",\n          \"localMacAddress\": \"string\",\n          \"localShortInterfaceName\": \"string\",\n          \"remoteDeviceName\": \"string\",\n          \"remoteInterfaceName\": \"string\",\n          \"remoteMacAddress\": \"string\",\n          \"remotePlatform\": \"string\",\n          \"remoteShortInterfaceName\": \"string\",\n          \"remoteVersion\": \"string\"\n        }\n      ],\n      \"onbState\": \"string\",\n      \"pid\": \"string\",\n      \"pnpProfileList\": [\n        {\n          \"createdBy\": \"string\",\n          \"discoveryCreated\": false,\n          \"primaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          },\n          \"profileName\": \"string\",\n          \"secondaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          }\n        }\n      ],\n      \"preWorkflowCliOuputs\": [\n        {\n          \"cli\": \"string\",\n          \"cliOutput\": \"string\"\n        }\n      ],\n      \"projectId\": \"string\",\n      \"projectName\": \"string\",\n      \"reloadRequested\": false,\n      \"serialNumber\": \"string\",\n      \"smartAccountId\": \"string\",\n      \"source\": \"string\",\n      \"stack\": false,\n      \"stackInfo\": {\n        \"isFullRing\": false,\n        \"stackMemberList\": [\n          {\n            \"hardwareVersion\": \"string\",\n            \"licenseLevel\": \"string\",\n            \"licenseType\": \"string\",\n            \"macAddress\": \"string\",\n            \"pid\": \"string\",\n            \"priority\": 0,\n            \"role\": \"string\",\n            \"serialNumber\": \"string\",\n            \"softwareVersion\": \"string\",\n            \"stackNumber\": 0,\n            \"state\": \"string\",\n            \"sudiSerialNumber\": \"string\"\n          }\n        ],\n        \"stackRingProtocol\": \"string\",\n        \"supportsStackWorkflows\": false,\n        \"totalMemberCount\": 0,\n        \"validLicenseLevels\": [\n          \"string\"\n        ]\n      },\n      \"state\": \"string\",\n      \"sudiRequired\": false,\n      \"tags\": \"any\",\n      \"userSudiSerialNos\": [\n        \"string\"\n      ],\n      \"virtualAccountId\": \"string\",\n      \"workflowId\": \"string\",\n      \"workflowName\": \"string\"\n    },\n    \"runSummaryList\": [\n      {\n        \"details\": \"string\",\n        \"errorFlag\": false,\n        \"historyTaskInfo\": {\n          \"addnDetails\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ],\n          \"name\": \"string\",\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        },\n        \"timestamp\": 0\n      }\n    ],\n    \"systemResetWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"systemWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"tenantId\": \"string\",\n    \"version\": 0,\n    \"workflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"workflowParameters\": {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  }\n]"
                },
                "description": "This API is used to import a list of Planned devices to the PnP database. A Planned device is a device that the customer has bought and/or is planning to manage.\n\n###### Request Model\n- root: (array[map], optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Provision Device",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/provision",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "provision"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"deviceIdList\": [\n    \"string\"\n  ]\n}"
                },
                "description": "This API is used push one or more devices to Provisoned state and add them to inventory.\n\n###### Request Model\n- root: (map, optional)\n  - deviceIdList: (array[string], optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Reset Device",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/reset",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "reset"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"deviceResetList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
                },
                "description": "This API is used to recover a device from a Workflow Execution Error state.\n\n###### Request Model\n- root: (map, optional)\n  - deviceResetList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Sync Result for Virtual Account",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/sacct/:domain/vacct/:name/sync-result",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "sacct",
                    ":domain",
                    "vacct",
                    ":name",
                    "sync-result"
                  ],
                  "variable": [
                    {
                      "key": "domain",
                      "value": "",
                      "description": "(string, required) Smart Account Domain"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, required) Virtual Account Name"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get the device sync info from the given smart account & virtual account with the PnP database. The SAVAMapping object which has the list of devices synced since the last sync is returned in the response.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Un-Claim Device",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/unclaim",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "unclaim"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"deviceIdList\": [\n    \"string\"\n  ]\n}"
                },
                "description": "This API is used to unassign the project and workflow from one or more device.A device can only be unclaimed if it has not begun provisioning.\n\n###### Request Model\n- root: (map, optional)\n  - deviceIdList: (array[string], optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Sync Virtual Account Devices",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-device/vacct-sync",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-device",
                    "vacct-sync"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
                },
                "description": "This API is used to sync the device info from the given smart account & virtual account with the PnP database. The list of synced devices is returned in the response.\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "View Settings",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get this user's list of global PnP settings\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Update Settings",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"_id\": \"string\",\n  \"aaaCredentials\": {\n    \"password\": \"string\",\n    \"username\": \"string\"\n  },\n  \"acceptEula\": false,\n  \"defaultProfile\": {\n    \"cert\": \"string\",\n    \"fqdnAddresses\": [\n      \"string\"\n    ],\n    \"ipAddresses\": [\n      \"string\"\n    ],\n    \"port\": 0,\n    \"proxy\": false\n  },\n  \"savaMappingList\": [\n    {\n      \"autoSyncPeriod\": 0,\n      \"ccoUser\": \"string\",\n      \"expiry\": 0,\n      \"lastSync\": 0,\n      \"profile\": {\n        \"addressFqdn\": \"string\",\n        \"addressIpV4\": \"string\",\n        \"cert\": \"string\",\n        \"makeDefault\": false,\n        \"name\": \"string\",\n        \"port\": 0,\n        \"profileId\": \"string\",\n        \"proxy\": false\n      },\n      \"smartAccountId\": \"string\",\n      \"syncResult\": {\n        \"syncList\": [\n          {\n            \"deviceSnList\": [\n              \"string\"\n            ],\n            \"syncType\": \"string\"\n          }\n        ],\n        \"syncMsg\": \"string\"\n      },\n      \"syncResultStr\": \"string\",\n      \"syncStartTime\": 0,\n      \"syncStatus\": \"string\",\n      \"tenantId\": \"string\",\n      \"token\": \"string\",\n      \"virtualAccountId\": \"string\"\n    }\n  ],\n  \"taskTimeOuts\": {\n    \"configTimeOut\": 0,\n    \"generalTimeOut\": 0,\n    \"imageDownloadTimeOut\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0\n}"
                },
                "description": "Change this user's list of global PnP settings\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - aaaCredentials: (map, optional)\n    - password: (string, optional)\n    - username: (string, optional)\n  - acceptEula: (boolean, optional)\n  - defaultProfile: (map, optional)\n    - cert: (string, optional)\n    - fqdnAddresses: (array[string], required)\n    - ipAddresses: (array[string], required)\n    - port: (integer, optional)\n    - proxy: (boolean, optional)\n  - savaMappingList: (array[map], optional)\n    - autoSyncPeriod: (integer, optional)\n    - ccoUser: (string, optional)\n    - expiry: (integer, optional)\n    - lastSync: (integer, optional)\n    - profile: (map, required)\n      - addressFqdn: (string, required)\n      - addressIpV4: (string, required)\n      - cert: (string, optional)\n      - makeDefault: (boolean, optional)\n      - name: (string, required)\n      - port: (integer, optional)\n      - profileId: (string, optional)\n      - proxy: (boolean, optional)\n    - smartAccountId: (string, required)\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - deviceSnList: (array[string], optional)\n        - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n      - syncMsg: (string, optional)\n    - syncResultStr: (string, optional)\n    - syncStartTime: (integer, optional)\n    - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n    - tenantId: (string, optional)\n    - token: (string, optional)\n    - virtualAccountId: (string, required)\n  - taskTimeOuts: (map, optional)\n    - configTimeOut: (integer, optional)\n    - generalTimeOut: (integer, optional)\n    - imageDownloadTimeOut: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Smart Account List",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings/sacct",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings",
                    "sacct"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get list of Smart Accounts. The list of smart account domains is returned in the response.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Virtual Account List",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings/sacct/:domain/vacct",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings",
                    "sacct",
                    ":domain",
                    "vacct"
                  ],
                  "variable": [
                    {
                      "key": "domain",
                      "value": "",
                      "description": "(string, required) Smart Account Domain"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get list of Virtual Accounts associated with the specified Smart Account. The list of virtual account names is returned in the response.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Add Virtual Account",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings/savacct",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings",
                    "savacct"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
                },
                "description": "This API is used to register a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The new profile is returned in the response.\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Edit PnP Server Profile",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings/savacct",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings",
                    "savacct"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
                },
                "description": "This API is used to edit the PnP Server profile in a registered Virtual Account in the PnP database.The edited smart & virtual account info is returned in the response.\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Deregister Virtual Account",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-settings/vacct",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-settings",
                    "vacct"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "domain",
                      "value": "",
                      "description": "(string, required) Smart Account Domain"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, required) Virtual Account Name"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to deregister the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The deregistered smart & virtual account info is returned in the response.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "List Workflows",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, optional) Limits number of results"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, optional) Index of first result"
                    },
                    {
                      "key": "sort",
                      "value": "",
                      "description": "(array, optional) Comma seperated lost of fields to sort on"
                    },
                    {
                      "key": "sortOrder",
                      "value": "",
                      "description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
                    },
                    {
                      "key": "type",
                      "value": "",
                      "description": "(array, optional) Workflow Type"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(array, optional) Workflow Name"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get the list of workflows that match the provided filter. Pagination and sorting are also supported. If a limit is not specified, it will default to return 50 workflows.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Create Workflow",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
                },
                "description": "This API is used to add a PnP Workflow along with the relevant tasks in the workflow into the PnP database.\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Delete Workflow",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Delete a workflow given its id\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Workflow",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get a workflow given its id\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Update Workflow",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow/:id",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "",
                      "description": "(string, required) id"
                    }
                  ],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
                },
                "description": "Update an existing workflow\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            },
            {
              "name": "Get Workflow Count",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/onboarding/pnp-workflow/count",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "onboarding",
                    "pnp-workflow",
                    "count"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "name",
                      "value": "",
                      "description": "(array, optional) Workflow Name"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "This API is used to get the number of the workflows.\n\n###### Response Model\n- root: (any, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "\"any\""
                }
              ]
            }
          ]
        },
        {
          "name": "SWIM",
          "item": [
            {
              "name": "Trigger activation on a device",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/image/activation/device",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "image",
                    "activation",
                    "device"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "scheduleValidate",
                      "value": "",
                      "description": "(boolean, optional) scheduleValidate, validates data before schedule (Optional)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  },
                  {
                    "key": "Client-Type",
                    "value": null,
                    "description": "(string, optional) Client-type (Optional)"
                  },
                  {
                    "key": "Client-Url",
                    "value": null,
                    "description": "(string, optional) Client-url (Optional)"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"activateLowerImageVersion\": false,\n    \"deviceUpgradeMode\": \"string\",\n    \"deviceUuid\": \"string\",\n    \"distributeIfNeeded\": false,\n    \"imageUuidList\": [\n      \"string\"\n    ],\n    \"smuImageUuidList\": [\n      \"string\"\n    ]\n  }\n]"
                },
                "description": "Performs activation of an image on a given device.\n\n###### Request Model\n- root: (array[map], optional)\n  - activateLowerImageVersion: (boolean, optional)\n  - deviceUpgradeMode: (string, optional)\n  - deviceUuid: (string, optional)\n  - distributeIfNeeded: (boolean, optional)\n  - imageUuidList: (array[string], optional)\n  - smuImageUuidList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Trigger distribution of an image",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/image/distribution",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "image",
                    "distribution"
                  ],
                  "variable": [],
                  "query": []
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"deviceUuid\": \"string\",\n    \"imageUuid\": \"string\"\n  }\n]"
                },
                "description": "Performs distribution of an image to a given device.\n\n###### Request Model\n- root: (array[map], optional)\n  - deviceUuid: (string, optional)\n  - imageUuid: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Get image details with filter",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/image/importation",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "image",
                    "importation"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "imageUuid",
                      "value": "",
                      "description": "(string, optional) imageUuid"
                    },
                    {
                      "key": "name",
                      "value": "",
                      "description": "(string, optional) name"
                    },
                    {
                      "key": "family",
                      "value": "",
                      "description": "(string, optional) family"
                    },
                    {
                      "key": "applicationType",
                      "value": "",
                      "description": "(string, optional) applicationType"
                    },
                    {
                      "key": "imageIntegrityStatus",
                      "value": "",
                      "description": "(string, optional) imageIntegrityStatus - FAILURE, UNKNOWN, VERIFIED"
                    },
                    {
                      "key": "version",
                      "value": "",
                      "description": "(string, optional) software Image Version"
                    },
                    {
                      "key": "imageSeries",
                      "value": "",
                      "description": "(string, optional) image Series"
                    },
                    {
                      "key": "imageName",
                      "value": "",
                      "description": "(string, optional) image Name"
                    },
                    {
                      "key": "isTaggedGolden",
                      "value": "",
                      "description": "(boolean, optional) is Tagged Golden"
                    },
                    {
                      "key": "isCCORecommended",
                      "value": "",
                      "description": "(boolean, optional) is recommended from cisco.com"
                    },
                    {
                      "key": "isCCOLatest",
                      "value": "",
                      "description": "(boolean, optional) is latest from cisco.com"
                    },
                    {
                      "key": "createdTime",
                      "value": "",
                      "description": "(integer, optional) time in milliseconds (epoch format)"
                    },
                    {
                      "key": "imageSizeGreaterThan",
                      "value": "",
                      "description": "(integer, optional) size in bytes"
                    },
                    {
                      "key": "imageSizeLesserThan",
                      "value": "",
                      "description": "(integer, optional) size in bytes"
                    },
                    {
                      "key": "sortBy",
                      "value": "",
                      "description": "(string, optional) sort results by this field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "(string, optional) sort order - 'asc' or 'des'. Default is asc"
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "(integer, optional) limit"
                    },
                    {
                      "key": "offset",
                      "value": "",
                      "description": "(integer, optional) offset"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Get image details based on filter criteria, use % for like operations. Example: filterByName = cat3k%\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - applicableDevicesForImage: (array[map], optional)\n      - mdfId: (string, optional)\n      - productId: (array[string], optional)\n      - productName: (string, optional)\n    - applicationType: (string, optional)\n    - createdTime: (string, optional)\n    - extendedAttributes: (map, optional)\n    - family: (string, optional)\n    - feature: (string, optional)\n    - fileServiceId: (string, optional)\n    - fileSize: (string, optional)\n    - imageIntegrityStatus: (string, optional)\n    - imageName: (string, optional)\n    - imageSeries: (array[string], optional)\n    - imageSource: (string, optional)\n    - imageType: (string, optional)\n    - imageUuid: (string, optional)\n    - importSourceType: (enum[\"DEVICE\",\"REMOTEURL\",\"CCO\",\"FILESYSTEM\"], optional)\n    - isTaggedGolden: (boolean, optional)\n    - md5Checksum: (string, optional)\n    - name: (string, optional)\n    - profileInfo: (array[map], optional)\n      - description: (string, optional)\n      - extendedAttributes: (map, optional)\n      - memory: (integer, optional)\n      - productType: (string, optional)\n      - profileName: (string, optional)\n      - shares: (integer, optional)\n      - vCpu: (integer, optional)\n    - shaCheckSum: (string, optional)\n    - vendor: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": [\n    {\n      \"applicableDevicesForImage\": [\n        {\n          \"mdfId\": \"string\",\n          \"productId\": [\n            \"string\"\n          ],\n          \"productName\": \"string\"\n        }\n      ],\n      \"applicationType\": \"string\",\n      \"createdTime\": \"string\",\n      \"extendedAttributes\": {\n        \n      },\n      \"family\": \"string\",\n      \"feature\": \"string\",\n      \"fileServiceId\": \"string\",\n      \"fileSize\": \"string\",\n      \"imageIntegrityStatus\": \"string\",\n      \"imageName\": \"string\",\n      \"imageSeries\": [\n        \"string\"\n      ],\n      \"imageSource\": \"string\",\n      \"imageType\": \"string\",\n      \"imageUuid\": \"string\",\n      \"importSourceType\": \"string\",\n      \"isTaggedGolden\": false,\n      \"md5Checksum\": \"string\",\n      \"name\": \"string\",\n      \"profileInfo\": [\n        {\n          \"description\": \"string\",\n          \"extendedAttributes\": {\n            \n          },\n          \"memory\": 0,\n          \"productType\": \"string\",\n          \"profileName\": \"string\",\n          \"shares\": 0,\n          \"vCpu\": 0\n        }\n      ],\n      \"shaCheckSum\": \"string\",\n      \"vendor\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Import an image from local file system",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/image/importation/source/file",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "image",
                    "importation",
                    "source",
                    "file"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "isThirdParty",
                      "value": "",
                      "description": "(boolean, optional) Third party Image check"
                    },
                    {
                      "key": "thirdPartyVendor",
                      "value": "",
                      "description": "(string, optional) Third Party Vendor"
                    },
                    {
                      "key": "thirdPartyImageFamily",
                      "value": "",
                      "description": "(string, optional) Third Party image family"
                    },
                    {
                      "key": "thirdPartyApplicationType",
                      "value": "",
                      "description": "(string, optional) Third Party Application Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  }
                ],
                "body": null,
                "description": "Imports an image to SWIM image repository from local file system. The image files with extensions bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2 are supported. Set siteUuid as -1 to tag as golden image.\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            },
            {
              "name": "Trigger now or schedule import of an image from a URL",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "https://{{dnac}}:{{port}}/api/v1/image/importation/source/url",
                  "protocol": "https",
                  "host": "{{dnac}}",
                  "port": "{{port}}",
                  "path": [
                    "api",
                    "v1",
                    "image",
                    "importation",
                    "source",
                    "url"
                  ],
                  "variable": [],
                  "query": [
                    {
                      "key": "scheduleAt",
                      "value": "",
                      "description": "(string, optional) Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the distribution should be scheduled (Optional) "
                    },
                    {
                      "key": "scheduleDesc",
                      "value": "",
                      "description": "(string, optional) Custom Description (Optional)"
                    },
                    {
                      "key": "scheduleOrigin",
                      "value": "",
                      "description": "(string, optional) Originator of this call (Optional)"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "X-Auth-Token",
                    "value": "{{token}}",
                    "description": "(string, required) Authorization token"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": "(string, required) Data format"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"applicationType\": \"string\",\n    \"imageFamily\": \"string\",\n    \"sourceURL\": \"string\",\n    \"thirdParty\": false,\n    \"vendor\": \"string\"\n  }\n]"
                },
                "description": "Imports an image to SWIM image repository, source is any ftp or http URL. The image files with extensions bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2 are supported. Set siteUuid as -1 to tag as golden image.\n\n###### Request Model\n- root: (array[map], optional)\n  - applicationType: (string, optional)\n  - imageFamily: (string, optional)\n  - sourceURL: (string, optional)\n  - thirdParty: (boolean, optional)\n  - vendor: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
              },
              "response": [
                {
                  "name": "Example Response",
                  "body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
